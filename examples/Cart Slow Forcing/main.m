
% [M,C,K,fnl,f_0,outdof,PlotFieldonDefMesh] = build_model(nElements);
% clear all
clear all
m1 = 1;
m2 = 1;
Mf = 2;
kf = 1;
k = 1;
c = 0.3;
cf = 0.3;
gamma = 0.5;
MTT = m1 + m2 + Mf;
K = -[-2*k - kf*((m1 + m2)/MTT)^2, -k - kf*m2*(m1 + m2)/MTT^2, kf*(m1+m2)/MTT; -k - kf*m2*(m1 + m2)/MTT^2, -2*k - kf*m2^2/(MTT^2), kf*m2/MTT; (m1 + m2)/MTT *kf, m2/MTT*kf, -kf];
C = -[-c - cf*((m1 + m2)/MTT)^2, -c - cf*m2*(m1 + m2)/MTT^2, cf*(m1+m2)/MTT; -c - cf*m2*(m1 + m2)/MTT^2, -2*c - cf*m2^2/(MTT^2), cf*m2/MTT; (m1 + m2)/MTT *cf, m2/MTT*cf, -cf];
M =  [Mf*(m1 + m2)/MTT, m2*Mf/MTT, 0; m2*Mf/MTT, m2*(m1 + Mf)/MTT, 0; 0,0, MTT];

A = [zeros(3),eye(3);inv(M)*K,inv(M)*C];
% w1 = sqrt(k/m);
% w2 = sqrt(3*k/m);
% ls = (-c/(2*m*w1) + 1i*sqrt(1-c^2/(4*m^2*w1^2)))*sqrt(k/m);
% lf = (-(3*c)/(2*m*w2) + 1i*sqrt(1-(3*c)^2/(4*m^2*w2^2)))*sqrt(3*k/m);

subs2 = [1 1 1 1];
n = 3;
F3 = sptensor(subs2, gamma, [n,n,n,n]);
F2 = sptensor([n,n,n]);
fnl = {F2,F3};


n = length(M);
disp(['Number of degrees of freedom = ' num2str(n)])
disp(['Phase space dimensionality = ' num2str(2*n)])


%%
% DS set up - SSM tool
hold on
DS = DynamicalSystem();
set(DS,'M',M,'C',C,'K',K,'fnl',fnl);
set(DS.Options,'Emax',6,'Nmax',10,'notation','multiindex')
[V,D,W] = DS.linear_spectral_analysis();
S = SSM(DS);
resonant_modes = [1 2];
Acheck = V*diag(D)*inv(V);
VI = inv(V);

tic
[F, lambda, V, G, DG] = functionFromTensors(M, C, K, fnl);
toc


%Lorenz force 
%%

L = -15;
N_Max = 10000;
tspan = linspace(L,20,N_Max);
loren = @(t,y) lorenz_3D(t,y);
IC = [0.8;0.3;0.2];
[tk,yy] = ode45(loren,tspan,IC);

sigma = 10;
rho = 28;
beta = 8/3;

% F_a = -(sigma*rho*yy(:,1) - sigma*yy(:,1).*yy(:,3) - sigma*yy(:,2) - sigma^2*yy(:,2) + sigma^2*yy(:,1));
scaling = 10;
F_a_new = scaling*yy(:,1)/max(abs(yy(:,1)));


Force_Lorenz = griddedInterpolant(tspan(:),F_a_new(:),'spline');

% Force_Lorenz = @(alpha) scaling*sin(alpha);
% F_a_new = Force_Lorenz(tk);

fig1 = figure
plot(tk,F_a_new,'Color','blue')
xlabel('$\alpha$','Interpreter','latex');
ylabel('$F(\alpha) \,[$N$]$','Interpreter','latex');
axis([0 6 -10 10])

% set(fig1, 'Units' , 'Inches' );
% pos = get(fig1, 'Position' );
% set(fig1, 'PaperPositionMode' , 'Auto' , 'PaperUnits' , 'Inches' , 'PaperSize' ,[pos(3), pos(4)])
% set(gcf,'Renderer','painters')
% print(fig1, 'forcing_slow.pdf' , '-dpdf' , '-r300' )


pos_t = find(tk>=0);
figure
plot(tk(pos_t),F_a_new(pos_t),'Color','red')
xlabel('$t \,[$s$]$','Interpreter','latex');
ylabel('$F(t) \,[$N$]$','Interpreter','latex');
axis([0 10 -1 1])

%%
[Vcheck,Dcheck] = eig(full(Acheck));
V0 = Vcheck;
 N_grid = 1000;
Grid_F = linspace(-max(F_a_new),max(F_a_new),N_grid);
VT = cell(1,N_grid);
DT = cell(1,N_grid);
ICTT = cell(1,N_grid);
AT = cell(1,N_grid);
for i = 1:N_grid
load_vector = [0;0;Grid_F(i)];
IC = getStaticResponse(K, M, F, load_vector, 0, 0);
ICTT{1,i} = IC(1:n,1);
[K_shift,fnl_shift] = build_model_shift(K,fnl,IC(1:n,1));
DS = DynamicalSystem();
set(DS,'M',M,'C',C,'K',K_shift,'fnl',fnl_shift);
set(DS.Options,'Emax',5,'Nmax',10,'notation','multiindex')
[V,D,W] = DS.linear_spectral_analysis();
AT{1,i} = DS.BinvA;

DT{1,i} = D;

% VC = reorient_complex(V,V0);

[Vcheck,Dcheck] = eig(full(AT{1,i}));
dsa = diag(Dcheck);
[d,ind]=sort(real(-dsa));
Ds=Dcheck(ind,ind);         %sorted eigenvalue matrix
Vs=Vcheck(:,ind); 

 VC = reorient_complex(Vs,V0);
% V0 = VC;
% [V,DA] = eigs(AT{1,i});
% dsa = diag(DA);
% [d,ind]=sort(real(-dsa));
% Ds=DA(ind,ind)          %sorted eigenvalue matrix
% Vs=V(:,ind); 
VT{1,i} = VC;

% % spec_ratio = [spec_ratio,real(D(3))/real(D(1))];
% % S = SSM(DS);
% % set(S.Options, 'reltol', 1,'notation','multiindex');
% %    resonant_modes = [1 2]; % choose master spectral subspace
% % order = 5;                  % SSM expansion order
% % S.choose_E(resonant_modes)
% % [W0,R0] = S.compute_whisker(order);
% % WT{1,i} = W0;
% % RT{1,i} = R0;
% % lamdMaster = DS.spectrum.Lambda(resonant_modes);
% % options = struct();
% % options.isauto = true; 
% % options.isdamped = true;
% % options.numDigits = 6;
% % disp('Reduced dynamics on the 2D stable SSM:')
% % y = reduced_dynamics_symbolic(lamdMaster,R0,options)
% DJ{1,i} = lamdMaster;

% hj = matlabFunction(y(2));
% backbonecurve{1,i} = hj;
end    

 save('VSP.mat','VT','V','Grid_F');
 save('ASP.mat','AT','A','Grid_F');
 save('DSP.mat','DT','Grid_F');
 save('ICSP.mat','ICTT','Grid_F');

 load('VSP.mat','VT','V','Grid_F');
 load('ASP.mat','AT','A','Grid_F');
 load('DSP.mat','DT','Grid_F');
 load('ICSP.mat','ICTT','Grid_F');


VarA = [];
AarA = [];
DarA = [];
IarA = [];
for ind = 1:max(size(Grid_F))
VarA = [VarA,VT{1,ind}(:)];
AarA = [AarA,full(AT{1,ind}(:))];
DarA = [DarA,DT{1,ind}(:)];
IarA = [IarA,ICTT{1,ind}(:)];
end    

ValphaR = griddedInterpolant(Grid_F(:),real(VarA).','spline');
ValphaI = griddedInterpolant(Grid_F(:),imag(VarA).','spline');
Valpha = @(F,V) reshape((ValphaR(F) + 1i*ValphaI(F)).',max(size(V(:,1))),max(size(V(1,:))));

Aalpha = griddedInterpolant(Grid_F(:),AarA.','spline');
Aalph = @(F,A) reshape(Aalpha(F).',max(size(A(:,1))),max(size(A(1,:))));

Dalpha = griddedInterpolant(Grid_F(:),DarA.','spline');
Dalph = @(F) Dalpha(F);

Ialpha = griddedInterpolant(Grid_F(:),IarA.','spline');
Ialph = @(F) Ialpha(F);
epsilon = 0.008;

%Order 0
xi_0 = @(alpha) [Ialpha(Force_Lorenz(alpha)).';0;0;0];

% Order 1

Load_Check = Ialph(F_a_new).';
[dXdF, Xtrunc,tkr1] = ftd(Load_Check, tk.');
IDalpha = griddedInterpolant(tkr1(:),dXdF.','spline');

ParA = [];
for gen_f = 1:max(size(F_a_new))
    P = Valpha(F_a_new(gen_f),V);
    ParA = [ParA,P(:)];
end    
[dXdFr, Xtruncr,tkr1] = ftd(real(ParA), tk.');
[dXdFi, Xtrunci,tkr1] = ftd(imag(ParA), tk.');
VDalphaR = griddedInterpolant(tkr1(:),dXdFr.','spline');
VDalphaI = griddedInterpolant(tkr1(:),dXdFi.','spline');
ValphaD = @(F,V) reshape((VDalphaR(F) + 1i*VDalphaI(F)).',max(size(V(:,1))),max(size(V(1,:))));

% [dXdFPa, XtruncPa,F_truncPa] = ftd(F_a_new.', tk.');
%  
% DForce_Lorenz = griddedInterpolant(F_truncPa(:),dXdFPa(:),'spline');

xi_1 = @(alpha,A) (inv(Aalph(Force_Lorenz(alpha),A))*[IDalpha(alpha).';0;0;0]);
XI_1 = [];
for indf = 1:max(size(tkr1))
    vec1=xi_1(tkr1(indf),A);
    XI_1 = [XI_1,vec1];
end    
% Order 2 

[dXdF, Xtrunc,tkr2] = ftd(XI_1, tkr1);
xi_1D = griddedInterpolant(tkr2(:),dXdF.','spline');
wrap = @(a,x)a(x);
xi_11 = @(alpha,A) wrap(xi_1(alpha,A),1);
xi_01 = @(alpha) wrap(xi_0(alpha),1);

xi_2 = @(alpha,A) (inv(Aalph(Force_Lorenz(alpha),A))*(xi_1D(alpha).'-[0;0;0;-3*gamma*(m1+Mf)/(m1*Mf)*xi_01(alpha)*xi_11(alpha,A)^2;3*gamma/m1*xi_01(alpha)*xi_11(alpha,A)^2;0]));

XI_2 = [];
for indf = 1:max(size(tkr2))
    vec1=xi_2(tkr2(indf),A);
    XI_2 = [XI_2,vec1];
end 

% Order 3
[dXdF, Xtrunc,tkr3] = ftd(XI_2, tkr2);
xi_2D = griddedInterpolant(tkr3(:),dXdF.','spline');
xi_21 = @(alpha,A) wrap(xi_2(alpha,A),1);

xi_3 = @(alpha,A) (inv(Aalph(Force_Lorenz(alpha),A))*(xi_2D(alpha).'-[0;0;0;-gamma*(m1+Mf)/(m1*Mf)*(xi_11(alpha,A)^3+6*xi_01(alpha)*xi_11(alpha,A)*xi_21(alpha,A));gamma/m1*(xi_11(alpha,A)^3+6*xi_01(alpha)*xi_11(alpha,A)*xi_21(alpha,A));0]));

XI_3A = [];
check_2D = [];
for indf = 1:max(size(tkr3))
    vec1=xi_3(tkr3(indf),A);
    check_2D = [check_2D,xi_1D(tkr3(indf)).'];
    XI_3A = [XI_3A,vec1];
end 

XI_2A = [];
for indf = 1:max(size(tkr3))
    vec1=xi_2(tkr3(indf),A);
    XI_2A = [XI_2A,vec1];
end 

XI_1A = [];
for indf = 1:max(size(tkr3))
    vec1=xi_1(tkr3(indf),A);
    XI_1A = [XI_1A,vec1];
end 

XI_0A = [];
for indf = 1:max(size(tkr3))
    vec1=xi_0(tkr3(indf));
    XI_0A = [XI_0A,vec1];
end 

%
XI_0 = griddedInterpolant(tkr3(:),XI_0A.','spline');
XI_1 = griddedInterpolant(tkr3(:),XI_1A.','spline');
XI_2 = griddedInterpolant(tkr3(:),XI_2A.','spline');

porder = 5;
framelen = 101;
sgf1 = sgolayfilt(XI_3A(1,:),porder,framelen);
sgf2 = sgolayfilt(XI_3A(2,:),porder,framelen);
sgf3 = sgolayfilt(XI_3A(3,:),porder,framelen);
sgf4 = sgolayfilt(XI_3A(4,:),porder,framelen);
sgf5 = sgolayfilt(XI_3A(5,:),porder,framelen);
sgf6 = sgolayfilt(XI_3A(6,:),porder,framelen);
XI_3f = [sgf1;sgf2;sgf3;sgf4;sgf5;sgf6];

XI_3 = griddedInterpolant(tkr3(:),XI_3f.','spline');
save('Solution.mat','XI_0','XI_1','XI_2','XI_3');

% figure 
% indexR = 6;
% plot(tkr3/epsilon,XI_3A(indexR,:),'Color','red')
% hold on 
% plot(tkr3/epsilon,sgf6,'Color','blue')
% 
% 
% epsilon = 0.01;
% 
% Anchor_Sol = XI_0A+epsilon*XI_1A+epsilon^2*XI_2A+epsilon^3*XI_3f;
% FullS = @(t,y) full_system(t,y,epsilon,Force_Lorenz);
% tic
% IC =Anchor_Sol(:,1);
% [tSP,SP_Traj] = ode45(FullS,tkr3/(epsilon),IC);
% toc
% % 
% figure 
% indexR = 6;
% plot(tSP,SP_Traj(:,indexR),'-','LineWidth',3,'color','black')
% hold on 
% plot(tkr3/epsilon,Anchor_Sol(indexR,:),'-','LineWidth',3,'color','red')
%  ylabel('$q_1$ ,[m]','Interpreter','latex');
%      xlabel('$t$,[s]','Interpreter','latex');
% 
%      figure 
% indexR = 6;
% % plot(tSP,SP_Traj(:,indexR),'-','LineWidth',3,'color','black')
% hold on 
% plot(tkr3/epsilon,check_2D(indexR,:),'-','LineWidth',3,'color','red')
% 
% 
%      figure 
% indexR = 4;
% plot(tSP,SP_Traj(:,indexR),'-','LineWidth',3,'color','black')
% hold on 
% plot(tSP,Anchor_Sol(indexR,:),'--','LineWidth',3,'color','red')
%  ylabel('$\dot{q}_1$ ,[m/s]','Interpreter','latex');
%      xlabel('$t$,[s]','Interpreter','latex');

   

% SSM construction 
Coeff_Iterate_1 = [];
for indf = 1:max(size(tkr2))
dia = Dalpha(Force_Lorenz(tkr2(indf)));
l1 = dia(1);
l1c = conj(l1);
l2 = dia(3);
l3 = dia(5);
alpha = tkr2(indf);
xi0 = xi_01(alpha);
xi1 = xi_11(alpha,A);
P = Valpha(Force_Lorenz(tkr2(indf)),V);
PI = inv(P);
PD = ValphaD(alpha,V);

h101 = (-(m1.*Mf.*PD(1, 1).*PI(3, 1)) - m1.*Mf.*PD(2, 1).*PI(3, 2) - m1.*Mf.*PD(3, 1).*PI(3, 3) - 6.*gamma.*m1.*xi0.*xi1.*P(1, 1).*PI(3, 4) - 6.*gamma.*Mf.*xi0.*xi1.*P(1, 1).*PI(3, 4) - ...
     m1.*Mf.*PD(4, 1).*PI(3, 4) + 6.*gamma.*Mf.*xi0.*xi1.*P(1, 1).*PI(3, 5) - m1.*Mf.*PD(5, 1).*PI(3, 5) - m1.*Mf.*PD(6, 1).*PI(3, 6))./((l1 - l2).*m1.*Mf);
hc011 = conj(h101);

h200 = (-3.*(gamma.*m1.*xi0.*P(1, 1).^2.*PI(3, 4) + gamma.*Mf.*xi0.*P(1, 1).^2.*PI(3, 4) - gamma.*Mf.*xi0.*P(1, 1).^2.*PI(3, 5)))./((2.*l1 - l2).*m1.*Mf);
hc020 = conj(h200);

h011 = (-(m1.*Mf.*PD(1, 2).*PI(3, 1)) - m1.*Mf.*PD(2, 2).*PI(3, 2) - m1.*Mf.*PD(3, 2).*PI(3, 3) - 6.*gamma.*m1.*xi0.*xi1.*P(1, 2).*PI(3, 4) - 6.*gamma.*Mf.*xi0.*xi1.*P(1, 2).*PI(3, 4) - ...
     m1.*Mf.*PD(4, 2).*PI(3, 4) + 6.*gamma.*Mf.*xi0.*xi1.*P(1, 2).*PI(3, 5) - m1.*Mf.*PD(5, 2).*PI(3, 5) - m1.*Mf.*PD(6, 2).*PI(3, 6))./((l1c - l2).*m1.*Mf);
hc101 = conj(h011);

h110 = (-6.*(gamma.*m1.*xi0.*P(1, 1).*P(1, 2).*PI(3, 4) + gamma.*Mf.*xi0.*P(1, 1).*P(1, 2).*PI(3, 4) - gamma.*Mf.*xi0.*P(1, 1).*P(1, 2).*PI(3, 5)))./((l1+l1c - l2).*m1.*Mf);
hc110 = conj(h110);

h020 = (-3.*(gamma.*m1.*xi0.*P(1, 2).^2.*PI(3, 4) + gamma.*Mf.*xi0.*P(1, 2).^2.*PI(3, 4) - gamma.*Mf.*xi0.*P(1, 2).^2.*PI(3, 5)))./((2.*l1c - l2).*m1.*Mf);
hc200 = conj(h020);

f101 = (-(m1.*Mf.*PD(1, 1).*PI(5, 1)) - m1.*Mf.*PD(2, 1).*PI(5, 2) - m1.*Mf.*PD(3, 1).*PI(5, 3) - 6.*gamma.*m1.*xi0.*xi1.*P(1, 1).*PI(5, 4) - 6.*gamma.*Mf.*xi0.*xi1.*P(1, 1).*PI(5, 4) - ...
     m1.*Mf.*PD(4, 1).*PI(5, 4) + 6.*gamma.*Mf.*xi0.*xi1.*P(1, 1).*PI(5, 5) - m1.*Mf.*PD(5, 1).*PI(5, 5) - m1.*Mf.*PD(6, 1).*PI(5, 6))./((l1 - l3).*m1.*Mf);
fc011 = conj(f101);

f200 = (-3.*(gamma.*m1.*xi0.*P(1, 1).^2.*PI(5, 4) + gamma.*Mf.*xi0.*P(1, 1).^2.*PI(5, 4) - gamma.*Mf.*xi0.*P(1, 1).^2.*PI(5, 5)))./((2.*l1 - l3).*m1.*Mf);
fc020 = conj(f200);

f011 = (-(m1.*Mf.*PD(1, 2).*PI(5, 1)) - m1.*Mf.*PD(2, 2).*PI(5, 2) - m1.*Mf.*PD(3, 2).*PI(5, 3) - 6.*gamma.*m1.*xi0.*xi1.*P(1, 2).*PI(5, 4) - 6.*gamma.*Mf.*xi0.*xi1.*P(1, 2).*PI(5, 4) - ...
     m1.*Mf.*PD(4, 2).*PI(5, 4) + 6.*gamma.*Mf.*xi0.*xi1.*P(1, 2).*PI(5, 5) - m1.*Mf.*PD(5, 2).*PI(5, 5) - m1.*Mf.*PD(6, 2).*PI(5, 6))./((l1c - l3).*m1.*Mf);
fc101 = conj(f011);

f110 = (-6.*(gamma.*m1.*xi0.*P(1, 1).*P(1, 2).*PI(5, 4) + gamma.*Mf.*xi0.*P(1, 1).*P(1, 2).*PI(5, 4) - gamma.*Mf.*xi0.*P(1, 1).*P(1, 2).*PI(5, 5)))./((l1+l1c - l3).*m1.*Mf);
fc110 = conj(f110);

f020 = (-3.*(gamma.*m1.*xi0.*P(1, 2).^2.*PI(5, 4) + gamma.*Mf.*xi0.*P(1, 2).^2.*PI(5, 4) - gamma.*Mf.*xi0.*P(1, 2).^2.*PI(5, 5)))./((2.*l1c - l3).*m1.*Mf);
fc200 = conj(f020);

h300 = (6.*gamma.*h200.*m1.*xi0.*P(1, 1).^2.*PI(1, 4) + 6.*gamma.*h200.*Mf.*xi0.*P(1, 1).^2.*PI(1, 4) - 6.*gamma.*h200.*Mf.*xi0.*P(1, 1).^2.*PI(1, 5) + 3.*gamma.*h110.*m1.*xi0.*P(1, 1).^2.*PI(2, 4) + ...
     3.*gamma.*h110.*Mf.*xi0.*P(1, 1).^2.*PI(2, 4) - 3.*gamma.*h110.*Mf.*xi0.*P(1, 1).^2.*PI(2, 5) - gamma.*m1.*P(1, 1).^3.*PI(3, 4) - gamma.*Mf.*P(1, 1).^3.*PI(3, 4) - ...
     6.*gamma.*h200.*m1.*xi0.*P(1, 1).*P(1, 3).*PI(3, 4) - 6.*gamma.*h200.*Mf.*xi0.*P(1, 1).*P(1, 3).*PI(3, 4) - 6.*gamma.*hc200.*m1.*xi0.*P(1, 1).*P(1, 4).*PI(3, 4) - ...
     6.*gamma.*hc200.*Mf.*xi0.*P(1, 1).*P(1, 4).*PI(3, 4) - 6.*f200.*gamma.*m1.*xi0.*P(1, 1).*P(1, 5).*PI(3, 4) - 6.*f200.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 5).*PI(3, 4) - ...
     6.*fc200.*gamma.*m1.*xi0.*P(1, 1).*P(1, 6).*PI(3, 4) - 6.*fc200.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 6).*PI(3, 4) + gamma.*Mf.*P(1, 1).^3.*PI(3, 5) + 6.*gamma.*h200.*Mf.*xi0.*P(1, 1).*P(1, 3).*PI(3, 5) + ...
     6.*gamma.*hc200.*Mf.*xi0.*P(1, 1).*P(1, 4).*PI(3, 5) + 6.*f200.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 5).*PI(3, 5) + 6.*fc200.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 6).*PI(3, 5))./((3.*l1 - l2).*m1.*Mf);

h030 = (3.*gamma.*h110.*m1.*xi0.*P(1, 2).^2.*PI(1, 4) + 3.*gamma.*h110.*Mf.*xi0.*P(1, 2).^2.*PI(1, 4) - 3.*gamma.*h110.*Mf.*xi0.*P(1, 2).^2.*PI(1, 5) + 6.*gamma.*h020.*m1.*xi0.*P(1, 2).^2.*PI(2, 4) + ...
     6.*gamma.*h020.*Mf.*xi0.*P(1, 2).^2.*PI(2, 4) - 6.*gamma.*h020.*Mf.*xi0.*P(1, 2).^2.*PI(2, 5) - gamma.*m1.*P(1, 2).^3.*PI(3, 4) - gamma.*Mf.*P(1, 2).^3.*PI(3, 4) - ...
     6.*gamma.*h020.*m1.*xi0.*P(1, 2).*P(1, 3).*PI(3, 4) - 6.*gamma.*h020.*Mf.*xi0.*P(1, 2).*P(1, 3).*PI(3, 4) - 6.*gamma.*hc020.*m1.*xi0.*P(1, 2).*P(1, 4).*PI(3, 4) - ...
     6.*gamma.*hc020.*Mf.*xi0.*P(1, 2).*P(1, 4).*PI(3, 4) - 6.*f020.*gamma.*m1.*xi0.*P(1, 2).*P(1, 5).*PI(3, 4) - 6.*f020.*gamma.*Mf.*xi0.*P(1, 2).*P(1, 5).*PI(3, 4) - ...
     6.*fc020.*gamma.*m1.*xi0.*P(1, 2).*P(1, 6).*PI(3, 4) - 6.*fc020.*gamma.*Mf.*xi0.*P(1, 2).*P(1, 6).*PI(3, 4) + gamma.*Mf.*P(1, 2).^3.*PI(3, 5) + 6.*gamma.*h020.*Mf.*xi0.*P(1, 2).*P(1, 3).*PI(3, 5) + ...
     6.*gamma.*hc020.*Mf.*xi0.*P(1, 2).*P(1, 4).*PI(3, 5) + 6.*f020.*gamma.*Mf.*xi0.*P(1, 2).*P(1, 5).*PI(3, 5) + 6.*fc020.*gamma.*Mf.*xi0.*P(1, 2).*P(1, 6).*PI(3, 5))./((3.*l1c - l2).*m1.*Mf);

h120 = (3.*(2.*gamma.*h110.*m1.*xi0.*P(1, 1).*P(1, 2).*PI(1, 4) + 2.*gamma.*h110.*Mf.*xi0.*P(1, 1).*P(1, 2).*PI(1, 4) + 2.*gamma.*h200.*m1.*xi0.*P(1, 2).^2.*PI(1, 4) + ...
      2.*gamma.*h200.*Mf.*xi0.*P(1, 2).^2.*PI(1, 4) - 2.*gamma.*h110.*Mf.*xi0.*P(1, 1).*P(1, 2).*PI(1, 5) - 2.*gamma.*h200.*Mf.*xi0.*P(1, 2).^2.*PI(1, 5) + ...
      4.*gamma.*h020.*m1.*xi0.*P(1, 1).*P(1, 2).*PI(2, 4) + 4.*gamma.*h020.*Mf.*xi0.*P(1, 1).*P(1, 2).*PI(2, 4) + gamma.*h110.*m1.*xi0.*P(1, 2).^2.*PI(2, 4) + gamma.*h110.*Mf.*xi0.*P(1, 2).^2.*PI(2, 4) - ...
      4.*gamma.*h020.*Mf.*xi0.*P(1, 1).*P(1, 2).*PI(2, 5) - gamma.*h110.*Mf.*xi0.*P(1, 2).^2.*PI(2, 5) - gamma.*m1.*P(1, 1).*P(1, 2).^2.*PI(3, 4) - gamma.*Mf.*P(1, 1).*P(1, 2).^2.*PI(3, 4) - ...
      2.*gamma.*h020.*m1.*xi0.*P(1, 1).*P(1, 3).*PI(3, 4) - 2.*gamma.*h020.*Mf.*xi0.*P(1, 1).*P(1, 3).*PI(3, 4) - 2.*gamma.*h110.*m1.*xi0.*P(1, 2).*P(1, 3).*PI(3, 4) - ...
      2.*gamma.*h110.*Mf.*xi0.*P(1, 2).*P(1, 3).*PI(3, 4) - 2.*gamma.*hc020.*m1.*xi0.*P(1, 1).*P(1, 4).*PI(3, 4) - 2.*gamma.*hc020.*Mf.*xi0.*P(1, 1).*P(1, 4).*PI(3, 4) - ...
      2.*gamma.*hc110.*m1.*xi0.*P(1, 2).*P(1, 4).*PI(3, 4) - 2.*gamma.*hc110.*Mf.*xi0.*P(1, 2).*P(1, 4).*PI(3, 4) - 2.*f020.*gamma.*m1.*xi0.*P(1, 1).*P(1, 5).*PI(3, 4) - ...
      2.*f020.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 5).*PI(3, 4) - 2.*f110.*gamma.*m1.*xi0.*P(1, 2).*P(1, 5).*PI(3, 4) - 2.*f110.*gamma.*Mf.*xi0.*P(1, 2).*P(1, 5).*PI(3, 4) - ...
      2.*fc020.*gamma.*m1.*xi0.*P(1, 1).*P(1, 6).*PI(3, 4) - 2.*fc020.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 6).*PI(3, 4) - 2.*fc110.*gamma.*m1.*xi0.*P(1, 2).*P(1, 6).*PI(3, 4) - ...
      2.*fc110.*gamma.*Mf.*xi0.*P(1, 2).*P(1, 6).*PI(3, 4) + gamma.*Mf.*P(1, 1).*P(1, 2).^2.*PI(3, 5) + 2.*gamma.*h020.*Mf.*xi0.*P(1, 1).*P(1, 3).*PI(3, 5) + ...
      2.*gamma.*h110.*Mf.*xi0.*P(1, 2).*P(1, 3).*PI(3, 5) + 2.*gamma.*hc020.*Mf.*xi0.*P(1, 1).*P(1, 4).*PI(3, 5) + 2.*gamma.*hc110.*Mf.*xi0.*P(1, 2).*P(1, 4).*PI(3, 5) + ...
      2.*f020.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 5).*PI(3, 5) + 2.*f110.*gamma.*Mf.*xi0.*P(1, 2).*P(1, 5).*PI(3, 5) + 2.*fc020.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 6).*PI(3, 5) + ...
      2.*fc110.*gamma.*Mf.*xi0.*P(1, 2).*P(1, 6).*PI(3, 5)))./((l1+2.*l1c - l2).*m1.*Mf);

h210 = (3.*(gamma.*h110.*m1.*xi0.*P(1, 1).^2.*PI(1, 4) + gamma.*h110.*Mf.*xi0.*P(1, 1).^2.*PI(1, 4) + 4.*gamma.*h200.*m1.*xi0.*P(1, 1).*P(1, 2).*PI(1, 4) + ...
      4.*gamma.*h200.*Mf.*xi0.*P(1, 1).*P(1, 2).*PI(1, 4) - gamma.*h110.*Mf.*xi0.*P(1, 1).^2.*PI(1, 5) - 4.*gamma.*h200.*Mf.*xi0.*P(1, 1).*P(1, 2).*PI(1, 5) + ...
      2.*gamma.*h020.*m1.*xi0.*P(1, 1).^2.*PI(2, 4) + 2.*gamma.*h020.*Mf.*xi0.*P(1, 1).^2.*PI(2, 4) + 2.*gamma.*h110.*m1.*xi0.*P(1, 1).*P(1, 2).*PI(2, 4) + ...
      2.*gamma.*h110.*Mf.*xi0.*P(1, 1).*P(1, 2).*PI(2, 4) - 2.*gamma.*h020.*Mf.*xi0.*P(1, 1).^2.*PI(2, 5) - 2.*gamma.*h110.*Mf.*xi0.*P(1, 1).*P(1, 2).*PI(2, 5) - gamma.*m1.*P(1, 1).^2.*P(1, 2).*PI(3, 4) - ...
      gamma.*Mf.*P(1, 1).^2.*P(1, 2).*PI(3, 4) - 2.*gamma.*h110.*m1.*xi0.*P(1, 1).*P(1, 3).*PI(3, 4) - 2.*gamma.*h110.*Mf.*xi0.*P(1, 1).*P(1, 3).*PI(3, 4) - ...
      2.*gamma.*h200.*m1.*xi0.*P(1, 2).*P(1, 3).*PI(3, 4) - 2.*gamma.*h200.*Mf.*xi0.*P(1, 2).*P(1, 3).*PI(3, 4) - 2.*gamma.*hc110.*m1.*xi0.*P(1, 1).*P(1, 4).*PI(3, 4) - ...
      2.*gamma.*hc110.*Mf.*xi0.*P(1, 1).*P(1, 4).*PI(3, 4) - 2.*gamma.*hc200.*m1.*xi0.*P(1, 2).*P(1, 4).*PI(3, 4) - 2.*gamma.*hc200.*Mf.*xi0.*P(1, 2).*P(1, 4).*PI(3, 4) - ...
      2.*f110.*gamma.*m1.*xi0.*P(1, 1).*P(1, 5).*PI(3, 4) - 2.*f110.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 5).*PI(3, 4) - 2.*f200.*gamma.*m1.*xi0.*P(1, 2).*P(1, 5).*PI(3, 4) - ...
      2.*f200.*gamma.*Mf.*xi0.*P(1, 2).*P(1, 5).*PI(3, 4) - 2.*fc110.*gamma.*m1.*xi0.*P(1, 1).*P(1, 6).*PI(3, 4) - 2.*fc110.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 6).*PI(3, 4) - ...
      2.*fc200.*gamma.*m1.*xi0.*P(1, 2).*P(1, 6).*PI(3, 4) - 2.*fc200.*gamma.*Mf.*xi0.*P(1, 2).*P(1, 6).*PI(3, 4) + gamma.*Mf.*P(1, 1).^2.*P(1, 2).*PI(3, 5) + ...
      2.*gamma.*h110.*Mf.*xi0.*P(1, 1).*P(1, 3).*PI(3, 5) + 2.*gamma.*h200.*Mf.*xi0.*P(1, 2).*P(1, 3).*PI(3, 5) + 2.*gamma.*hc110.*Mf.*xi0.*P(1, 1).*P(1, 4).*PI(3, 5) + ...
      2.*gamma.*hc200.*Mf.*xi0.*P(1, 2).*P(1, 4).*PI(3, 5) + 2.*f110.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 5).*PI(3, 5) + 2.*f200.*gamma.*Mf.*xi0.*P(1, 2).*P(1, 5).*PI(3, 5) + ...
      2.*fc110.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 6).*PI(3, 5) + 2.*fc200.*gamma.*Mf.*xi0.*P(1, 2).*P(1, 6).*PI(3, 5)))./((2.*l1+l1c - l2).*m1.*Mf);


f300 = (6.*f200.*gamma.*m1.*xi0.*P(1, 1).^2.*PI(1, 4) + 6.*f200.*gamma.*Mf.*xi0.*P(1, 1).^2.*PI(1, 4) - 6.*f200.*gamma.*Mf.*xi0.*P(1, 1).^2.*PI(1, 5) + 3.*f110.*gamma.*m1.*xi0.*P(1, 1).^2.*PI(2, 4) + ...
     3.*f110.*gamma.*Mf.*xi0.*P(1, 1).^2.*PI(2, 4) - 3.*f110.*gamma.*Mf.*xi0.*P(1, 1).^2.*PI(2, 5) - gamma.*m1.*P(1, 1).^3.*PI(5, 4) - gamma.*Mf.*P(1, 1).^3.*PI(5, 4) - ...
     6.*gamma.*h200.*m1.*xi0.*P(1, 1).*P(1, 3).*PI(5, 4) - 6.*gamma.*h200.*Mf.*xi0.*P(1, 1).*P(1, 3).*PI(5, 4) - 6.*gamma.*hc200.*m1.*xi0.*P(1, 1).*P(1, 4).*PI(5, 4) - ...
     6.*gamma.*hc200.*Mf.*xi0.*P(1, 1).*P(1, 4).*PI(5, 4) - 6.*f200.*gamma.*m1.*xi0.*P(1, 1).*P(1, 5).*PI(5, 4) - 6.*f200.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 5).*PI(5, 4) - ...
     6.*fc200.*gamma.*m1.*xi0.*P(1, 1).*P(1, 6).*PI(5, 4) - 6.*fc200.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 6).*PI(5, 4) + gamma.*Mf.*P(1, 1).^3.*PI(5, 5) + 6.*gamma.*h200.*Mf.*xi0.*P(1, 1).*P(1, 3).*PI(5, 5) + ...
     6.*gamma.*hc200.*Mf.*xi0.*P(1, 1).*P(1, 4).*PI(5, 5) + 6.*f200.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 5).*PI(5, 5) + 6.*fc200.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 6).*PI(5, 5))./((3.*l1 - l3).*m1.*Mf);

f030 = (3.*f110.*gamma.*m1.*xi0.*P(1, 2).^2.*PI(1, 4) + 3.*f110.*gamma.*Mf.*xi0.*P(1, 2).^2.*PI(1, 4) - 3.*f110.*gamma.*Mf.*xi0.*P(1, 2).^2.*PI(1, 5) + 6.*f020.*gamma.*m1.*xi0.*P(1, 2).^2.*PI(2, 4) + ...
     6.*f020.*gamma.*Mf.*xi0.*P(1, 2).^2.*PI(2, 4) - 6.*f020.*gamma.*Mf.*xi0.*P(1, 2).^2.*PI(2, 5) - gamma.*m1.*P(1, 2).^3.*PI(5, 4) - gamma.*Mf.*P(1, 2).^3.*PI(5, 4) - ...
     6.*gamma.*h020.*m1.*xi0.*P(1, 2).*P(1, 3).*PI(5, 4) - 6.*gamma.*h020.*Mf.*xi0.*P(1, 2).*P(1, 3).*PI(5, 4) - 6.*gamma.*hc020.*m1.*xi0.*P(1, 2).*P(1, 4).*PI(5, 4) - ...
     6.*gamma.*hc020.*Mf.*xi0.*P(1, 2).*P(1, 4).*PI(5, 4) - 6.*f020.*gamma.*m1.*xi0.*P(1, 2).*P(1, 5).*PI(5, 4) - 6.*f020.*gamma.*Mf.*xi0.*P(1, 2).*P(1, 5).*PI(5, 4) - ...
     6.*fc020.*gamma.*m1.*xi0.*P(1, 2).*P(1, 6).*PI(5, 4) - 6.*fc020.*gamma.*Mf.*xi0.*P(1, 2).*P(1, 6).*PI(5, 4) + gamma.*Mf.*P(1, 2).^3.*PI(5, 5) + 6.*gamma.*h020.*Mf.*xi0.*P(1, 2).*P(1, 3).*PI(5, 5) + ...
     6.*gamma.*hc020.*Mf.*xi0.*P(1, 2).*P(1, 4).*PI(5, 5) + 6.*f020.*gamma.*Mf.*xi0.*P(1, 2).*P(1, 5).*PI(5, 5) + 6.*fc020.*gamma.*Mf.*xi0.*P(1, 2).*P(1, 6).*PI(5, 5))./((3.*l1c - l3).*m1.*Mf);

f120 = (3.*(2.*f110.*gamma.*m1.*xi0.*P(1, 1).*P(1, 2).*PI(1, 4) + 2.*f110.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 2).*PI(1, 4) + 2.*f200.*gamma.*m1.*xi0.*P(1, 2).^2.*PI(1, 4) + ...
      2.*f200.*gamma.*Mf.*xi0.*P(1, 2).^2.*PI(1, 4) - 2.*f110.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 2).*PI(1, 5) - 2.*f200.*gamma.*Mf.*xi0.*P(1, 2).^2.*PI(1, 5) + ...
      4.*f020.*gamma.*m1.*xi0.*P(1, 1).*P(1, 2).*PI(2, 4) + 4.*f020.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 2).*PI(2, 4) + f110.*gamma.*m1.*xi0.*P(1, 2).^2.*PI(2, 4) + f110.*gamma.*Mf.*xi0.*P(1, 2).^2.*PI(2, 4) - ...
      4.*f020.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 2).*PI(2, 5) - f110.*gamma.*Mf.*xi0.*P(1, 2).^2.*PI(2, 5) - gamma.*m1.*P(1, 1).*P(1, 2).^2.*PI(5, 4) - gamma.*Mf.*P(1, 1).*P(1, 2).^2.*PI(5, 4) - ...
      2.*gamma.*h020.*m1.*xi0.*P(1, 1).*P(1, 3).*PI(5, 4) - 2.*gamma.*h020.*Mf.*xi0.*P(1, 1).*P(1, 3).*PI(5, 4) - 2.*gamma.*h110.*m1.*xi0.*P(1, 2).*P(1, 3).*PI(5, 4) - ...
      2.*gamma.*h110.*Mf.*xi0.*P(1, 2).*P(1, 3).*PI(5, 4) - 2.*gamma.*hc020.*m1.*xi0.*P(1, 1).*P(1, 4).*PI(5, 4) - 2.*gamma.*hc020.*Mf.*xi0.*P(1, 1).*P(1, 4).*PI(5, 4) - ...
      2.*gamma.*hc110.*m1.*xi0.*P(1, 2).*P(1, 4).*PI(5, 4) - 2.*gamma.*hc110.*Mf.*xi0.*P(1, 2).*P(1, 4).*PI(5, 4) - 2.*f020.*gamma.*m1.*xi0.*P(1, 1).*P(1, 5).*PI(5, 4) - ...
      2.*f020.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 5).*PI(5, 4) - 2.*f110.*gamma.*m1.*xi0.*P(1, 2).*P(1, 5).*PI(5, 4) - 2.*f110.*gamma.*Mf.*xi0.*P(1, 2).*P(1, 5).*PI(5, 4) - ...
      2.*fc020.*gamma.*m1.*xi0.*P(1, 1).*P(1, 6).*PI(5, 4) - 2.*fc020.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 6).*PI(5, 4) - 2.*fc110.*gamma.*m1.*xi0.*P(1, 2).*P(1, 6).*PI(5, 4) - ...
      2.*fc110.*gamma.*Mf.*xi0.*P(1, 2).*P(1, 6).*PI(5, 4) + gamma.*Mf.*P(1, 1).*P(1, 2).^2.*PI(5, 5) + 2.*gamma.*h020.*Mf.*xi0.*P(1, 1).*P(1, 3).*PI(5, 5) + ...
      2.*gamma.*h110.*Mf.*xi0.*P(1, 2).*P(1, 3).*PI(5, 5) + 2.*gamma.*hc020.*Mf.*xi0.*P(1, 1).*P(1, 4).*PI(5, 5) + 2.*gamma.*hc110.*Mf.*xi0.*P(1, 2).*P(1, 4).*PI(5, 5) + ...
      2.*f020.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 5).*PI(5, 5) + 2.*f110.*gamma.*Mf.*xi0.*P(1, 2).*P(1, 5).*PI(5, 5) + 2.*fc020.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 6).*PI(5, 5) + ...
      2.*fc110.*gamma.*Mf.*xi0.*P(1, 2).*P(1, 6).*PI(5, 5)))./((l1+2.*l1c - l3).*m1.*Mf);


f210 = (3.*(f110.*gamma.*m1.*xi0.*P(1, 1).^2.*PI(1, 4) + f110.*gamma.*Mf.*xi0.*P(1, 1).^2.*PI(1, 4) + 4.*f200.*gamma.*m1.*xi0.*P(1, 1).*P(1, 2).*PI(1, 4) + ...
      4.*f200.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 2).*PI(1, 4) - f110.*gamma.*Mf.*xi0.*P(1, 1).^2.*PI(1, 5) - 4.*f200.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 2).*PI(1, 5) + ...
      2.*f020.*gamma.*m1.*xi0.*P(1, 1).^2.*PI(2, 4) + 2.*f020.*gamma.*Mf.*xi0.*P(1, 1).^2.*PI(2, 4) + 2.*f110.*gamma.*m1.*xi0.*P(1, 1).*P(1, 2).*PI(2, 4) + ...
      2.*f110.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 2).*PI(2, 4) - 2.*f020.*gamma.*Mf.*xi0.*P(1, 1).^2.*PI(2, 5) - 2.*f110.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 2).*PI(2, 5) - gamma.*m1.*P(1, 1).^2.*P(1, 2).*PI(5, 4) - ...
      gamma.*Mf.*P(1, 1).^2.*P(1, 2).*PI(5, 4) - 2.*gamma.*h110.*m1.*xi0.*P(1, 1).*P(1, 3).*PI(5, 4) - 2.*gamma.*h110.*Mf.*xi0.*P(1, 1).*P(1, 3).*PI(5, 4) - ...
      2.*gamma.*h200.*m1.*xi0.*P(1, 2).*P(1, 3).*PI(5, 4) - 2.*gamma.*h200.*Mf.*xi0.*P(1, 2).*P(1, 3).*PI(5, 4) - 2.*gamma.*hc110.*m1.*xi0.*P(1, 1).*P(1, 4).*PI(5, 4) - ...
      2.*gamma.*hc110.*Mf.*xi0.*P(1, 1).*P(1, 4).*PI(5, 4) - 2.*gamma.*hc200.*m1.*xi0.*P(1, 2).*P(1, 4).*PI(5, 4) - 2.*gamma.*hc200.*Mf.*xi0.*P(1, 2).*P(1, 4).*PI(5, 4) - ...
      2.*f110.*gamma.*m1.*xi0.*P(1, 1).*P(1, 5).*PI(5, 4) - 2.*f110.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 5).*PI(5, 4) - 2.*f200.*gamma.*m1.*xi0.*P(1, 2).*P(1, 5).*PI(5, 4) - ...
      2.*f200.*gamma.*Mf.*xi0.*P(1, 2).*P(1, 5).*PI(5, 4) - 2.*fc110.*gamma.*m1.*xi0.*P(1, 1).*P(1, 6).*PI(5, 4) - 2.*fc110.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 6).*PI(5, 4) - ...
      2.*fc200.*gamma.*m1.*xi0.*P(1, 2).*P(1, 6).*PI(5, 4) - 2.*fc200.*gamma.*Mf.*xi0.*P(1, 2).*P(1, 6).*PI(5, 4) + gamma.*Mf.*P(1, 1).^2.*P(1, 2).*PI(5, 5) + ...
      2.*gamma.*h110.*Mf.*xi0.*P(1, 1).*P(1, 3).*PI(5, 5) + 2.*gamma.*h200.*Mf.*xi0.*P(1, 2).*P(1, 3).*PI(5, 5) + 2.*gamma.*hc110.*Mf.*xi0.*P(1, 1).*P(1, 4).*PI(5, 5) + ...
      2.*gamma.*hc200.*Mf.*xi0.*P(1, 2).*P(1, 4).*PI(5, 5) + 2.*f110.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 5).*PI(5, 5) + 2.*f200.*gamma.*Mf.*xi0.*P(1, 2).*P(1, 5).*PI(5, 5) + ...
      2.*fc110.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 6).*PI(5, 5) + 2.*fc200.*gamma.*Mf.*xi0.*P(1, 2).*P(1, 6).*PI(5, 5)))./((2.*l1+l1c - l3).*m1.*Mf);





% h101= (-7.5 *gamma*xi01*xi11*P(1,1)*PI(3,4) + 6*gamma*xi01*xi11*P(1,1)*PI(3,5))/(l1-l2);
% hc101 = conj(h101);
% 
% h200 =(-3.75*gamma*xi01*P(1,1)^2*PI(3,4) + 3*gamma*xi01*P(1,1)^2*PI(3, 5))/(2*l1 - l2);
% hc200 = conj(h200);
% 
% h011 = (-7.5*gamma*xi01*xi11*P(1,2)*PI(3,4) + 6*gamma*xi01*xi11* P(1,2)*PI(3,5))/(l1c - l2);
% hc011 = conj(h011);
% 
% h110 = (-7.5*gamma*xi01*P(1,1)*P(1,2)*PI(3, 4) + 6*gamma*xi01*P(1,1)*P(1,2)*PI(3,5))/(l1 + l1c- l2);
% hc110 = conj(h110);
% 
% h020 = (-3.75*gamma*xi01*P(1,2)^2*PI(3,4)+ 3*gamma*xi01*P(1,2)^2*PI(3,5))/(2*l1c - l2);
% hc020 = conj(h020);
% 
% f101 =(-7.5*gamma*xi01*xi11*P(1,1)*PI(5,4) + 6*gamma*xi01*xi11*P(1,1)*PI(5,5))/(l1- l3);
% fc101 = conj(f101);
% 
% f200=(-3.75*gamma*xi01*P(1,1)^2*PI(5,4)+ 3*gamma*xi01*P(1,1)^2*PI(5,5))/(2*l1 - l3);
% fc200 = conj(f200);
% 
% 
% f011= (-7.5*gamma*xi01*xi11*P(1,2)*PI(5,4) + 6*gamma*xi01*xi11*P(1,2)*PI(5,5))/(l1c -l3);
% fc011 = conj(f011);
% 
% 
% f110 = (-7.5*gamma*xi01*P(1,1)*P(1,2)*PI(5,4) +  6*gamma*xi01*P(1,1)*P(1,2)*PI(5,5))/(l1 +l1c -l3);
% fc110 = conj(f110);
% 
% f020= (-3.75*gamma*xi01*P(1,2)^2*PI(5,4)+3*gamma*xi01*P(1,2)^2*PI(5,5))/(2*l1c -l3);
% fc020 = conj(f020);
% 
% 
% h300 = ... 
%  1/(3*l1 - l2)* ... 
% (7.5*gamma*h200 *xi01* P(1, 1)^2*PI(1, 4) - ...
%     6*gamma*h200*xi01* P(1,1)^2* PI(1, 5) + ...
%     3.75*gamma*h110*xi01*P(1,1)^2*PI(2,4) - ...
%     3*gamma*h110*xi01*P(1,1)^2*PI(2,5) - 1.25*gamma*P(1,1)^3*PI(3,4) - ... 
%     7.5*gamma*h200*xi01*P(1,1)*P(1,3)*PI(3, 4) - ...
%     7.5*gamma*hc200*xi01*P(1,1)*P(1, 4)*PI(3,4) - ...
%     7.5*gamma*f200*xi01*P(1,1)*P(1,5)*PI(3,4) - ...
%     7.5*gamma*fc200*xi01*P(1, 1)*P(1,6)*PI(3,4)+ 1*gamma*P(1,1)^3*PI(3,5) +... 
%     6*gamma*h200*xi01*P(1, 1)*P(1,3)*PI(3, 5) + ...
%     6*gamma*hc200*xi01*P(1,1)*P(1, 4)*PI(3,5) + ...
%     6*gamma*f200*xi01*P(1,1)*P(1,5)*PI(3,5) + ... 
%     6*gamma*fc200*xi01*P(1,1)*P(1, 6)*PI(3,5));
% 
% 
%  h030 = 1/(3*l1c - l2)*(3.75*gamma*h110*xi01*P(1,2)^2*PI(1,4) - ... 
%     3*gamma*h110*xi01*P(1,2)^2*PI(1,5) + ... 
%     7.5*gamma*h020*xi01*P(1,2)^2*PI(2,4) - ...
%     6*gamma*h020*xi01*P(1,2)^2*PI(2,5)- 1.25*gamma*P(1,2)^3*PI(3,4)- ...
%     7.5*gamma*h020*xi01*P(1,2)*P(1,3)*PI(3,4) - ...
%     7.5*gamma*hc020*xi01*P(1,2)*P(1,4)*PI(3,4) - ...
%     7.5*gamma*f020*xi01*P(1,2)*P(1,5)*PI(3,4) - ...
%     7.5*gamma*fc020*xi01*P(1,2)*P(1,6)*PI(3,4)+ gamma*P(1,2)^3*PI(3,5) + ...
%     6*gamma*h020*xi01*P(1,2)*P(1,3)*PI(3,5)+ ...
%     6*gamma*hc020*xi01*P(1,2)*P(1,4)*PI(3,5)+ ...
%     6*gamma*f020*xi01*P(1,2)*P(1,5)*PI(3,5)+ ...
%     6*gamma*fc020*xi01*P(1,2)*P(1,6)*PI(3,5));
% 
%   h120= 1/(l1+ 2*l1c-l2)* (7.5*gamma*h110*xi01*P(1,1)*P(1,2)*PI(1,4)+ ...
%   7.5*gamma*h200*xi01*P(1,2)^2*PI(1,4) - ...
%     6*gamma*h110*xi01*P(1,1)*P(1,2)*PI(1,5) - ...
%     6*gamma*h200*xi01*P(1,2)^2*PI(1,5)+ ...
%     15*gamma*h020*xi01*P(1,1)*P(1,2)*PI(2,4) + ...
%     3.75*gamma*h110*xi01*P(1,2)^2*PI(2,4) - ...
%     12*gamma*h020*xi01*P(1,1)*P(1,2)*PI(2,5) - ...
%     3*gamma*h110*xi01*P(1,2)^2*PI(2,5) - ...
%     3.75*gamma*P(1,1)*P(1,2)^2*PI(3,4)- ...
%     7.5*gamma*h020*xi01*P(1,1)*P(1,3)*PI(3,4) - ...
%     7.5*gamma*h110*xi01*P(1,2)*P(1,3)*PI(3,4) - ...
%     7.5*gamma*hc020*xi01*P(1,1)*P(1,4)*PI(3,4) - ...
%     7.5*gamma*hc110*xi01*P(1,2)*P(1,4)*PI(3,4) - ...
%     7.5*gamma*f020*xi01*P(1,1)*P(1,5)*PI(3,4) - ...
%     7.5*gamma*f110*xi01*P(1,2)*P(1,5)*PI(3,4) - ...
%     7.5*gamma*fc020*xi01*P(1,1)*P(1,6)*PI(3,4) - ...
%     7.5*gamma*fc110*xi01*P(1,2)*P(1,6)*PI(3,4)+ ...
%     3*gamma*P(1,1)*P(1,2)^2*PI(3,5)+ ...
%     6*gamma*h020*xi01*P(1,1)*P(1,3)*PI(3,5)+ ...
%     6*gamma*h110*xi01*P(1,2)*P(1,3)*PI(3,5) + ...
%     6*gamma*hc020*xi01*P(1,1)*P(1,4)*PI(3,5) + ...
%     6*gamma*hc110*xi01*P(1,2)*P(1,4)*PI(3,5) + ...
%     6*gamma*f020*xi01*P(1,1)*P(1,5)*PI(3,5) + ...
%     6*gamma*f110*xi01*P(1,2)*P(1,5)*PI(3,5) + ...
%     6*gamma*fc020*xi01*P(1,1)*P(1,6)*PI(3,5) + ...
%     6*gamma*fc110*xi01*P(1,2)*P(1,6)*PI(3,5));
% 
% 
%  h210= 1/(2*l1 + l1c - l2)* (3.75*gamma*h110*xi01*P(1,1)^2*PI(1,4) + ...
%     15*gamma*h200*xi01*P(1,1)*P(1,2)*PI(1,4) - ...
%     3*gamma*h110*xi01*P(1,1)^2*PI(1,5) - ...
%     12*gamma*h200*xi01*P(1,1)*P(1,2)*PI(1,5) + ...
%     7.5*gamma*h020*xi01*P(1,1)^2*PI(2,4) + ...
%     7.5*gamma*h110*xi01*P(1,1)*P(1,2)*PI(2,4) - ...
%     6*gamma*h020*xi01*P(1,1)^2*PI(2,5) - ...
%     6*gamma*h110*xi01*P(1,1)*P(1,2)*PI(2,5)  - ...
%     3.75*gamma*P(1,1)^2*P(1,2)*PI(3,4) - ...
%     7.5*gamma*h110*xi01*P(1,1)*P(1,3)*PI(3,4) - ...
%     7.5*gamma*h200*xi01*P(1,2)*P(1,3)*PI(3,4) - ...
%     7.5*gamma*hc110*xi01*P(1,1)*P(1,4)*PI(3,4) - ...
%     7.5*gamma*hc200*xi01*P(1,2)*P(1,4)*PI(3,4) - ...
%     7.5*gamma*f110*xi01*P(1,1)*P(1,5)*PI(3,4)  - ...
%     7.5*gamma*f200*xi01*P(1,2)*P(1,5)*PI(3,4) - ...
%     7.5*gamma*fc110*xi01*P(1,1)*P(1,6)*PI(3,4) - ...
%     7.5*gamma*fc200*xi01*P(1,2)*P(1,6)*PI(3,4) + ...
%     3*gamma*P(1,1)^2*P(1,2)*PI(3,5) + ...
%     6*gamma*h110*xi01*P(1,1)*P(1,3)*PI(3,5) + ...
%     6*gamma*h200*xi01*P(1,2)*P(1,3)*PI(3,5) + ...
%     6*gamma*hc110*xi01*P(1,1)*P(1,4)*PI(3,5) + ...
%     6*gamma*hc200*xi01*P(1,2)*P(1,4)*PI(3,5) + ...
%     6*gamma*f110*xi01*P(1,1)*P(1,5)*PI(3,5) + ...
%     6*gamma*f200*xi01*P(1,2)*P(1,5)*PI(3,5) + ...
%     6*gamma*fc110*xi01*P(1,1)*P(1,6)*PI(3,5)+ ...
%     6*gamma*fc200*xi01*P(1,2)*P(1,6)*PI(3,5));
% 
% 
%  f300= 1/(3*l1 - l3)* (7.5* gamma*   f200 *   xi01 * P(1,1)^2* PI(1,4) - ...
%     6* gamma*   f200*xi01* P(1,1)^2*PI(1,5) + ...
%     3.75* gamma* f110*  xi01*  P(1,1)^2*PI(2,4) - ...
%     3* gamma *f110 * xi01 *  P(1,1)^2*PI(2,5) - 1.25* gamma* P(1,1)^3 *PI(5,4) - ...
%     7.5* gamma*  h200*  xi01* P(1,1)*P(1,3)*PI(5,4) - ...
%     7.5* gamma*  hc200*  xi01* P(1, 1)* P(1, 4)* PI(5, 4) - ...
%     7.5* gamma*   f200*   xi01 *P(1, 1)* P(1, 5)* PI(5, 4) - ...
%     7.5* gamma * fc200*  xi01* P(1, 1)* P(1, 6)* PI(5, 4) + gamma* P(1,1)^3* PI(5, 5) + ...
%     6* gamma*  h200*  xi01 *P(1, 1)* P(1, 3)* PI(5, 5) + ...
%     6* gamma*  hc200*  xi01* P(1, 1)* P(1, 4)* PI(5, 5) + ...
%     6* gamma*   f200*   xi01* P(1,1)*P(1,5)*PI(5, 5) + ...
%     6* gamma*  fc200*  xi01* P(1, 1)* P(1, 6)* PI(5, 5));
% 
%  f030 = 1/(3*l1c - l3)* (3.75* gamma *f110*  xi01*  P(1,2)^2 *PI(1, 4) - ...
%     3* gamma* f110* xi01* P(1, 2)^2* PI(1, 5) + ...
%     7.5* gamma  *f020   *xi01 *P(1, 2)^2 *PI(2, 4) - ...
%     6*gamma*  f020*   xi01* P(1, 2)^2* PI(2, 5) - 1.25* gamma* P(1, 2)^3* PI(5, 4) - ...
%     7.5* gamma*  h020*   xi01* P(1, 2)* P(1, 3)* PI(5, 4) - ...
%     7.5* gamma * hc020   *xi01 *P(1, 2) *P(1, 4)* PI(5, 4) - ...
%     7.5* gamma*  f020 *  xi01 * P(1, 2)* P(1, 5)* PI(5, 4) - ...
%     7.5* gamma*  fc020*   xi01* P(1, 2)* P(1, 6)* PI(5, 4) +  gamma* P(1,2)^3* PI(5, 5) + ...
%     6* gamma*  h020*   xi01* P(1, 2)* P(1, 3)* PI(5, 5) + ...
%     6* gamma * hc020   *xi01 *P(1, 2) *P(1, 4)* PI(5, 5) + ...
%     6* gamma * f020 *  xi01 *P(1,2)* P(1,5)*PI(5,5) + ...
%     6* gamma  *fc020 *  xi01 *P(1,2)* P(1,6)*PI(5,5));
% 
% 
%  f120= 1/(l1 + 2*l1c -l3)* (7.5* gamma* f110* xi01* P(1, 1)* P(1, 2) *PI(1,4) ...
%  + 7.5* gamma*   f200*   xi01 *P(1, 2)^2* PI(1, 4) - ...
%     6* gamma *f110 *xi01 *P(1, 1) *P(1, 2) *PI(1, 5) - ...
%     6* gamma * f200* xi01* P(1, 2)^2* PI(1, 5) + ...
%     15* gamma * f020   *xi01* P(1, 1) *P(1, 2)*PI(2, 4) + ...
%     3.75 *gamma *f110* xi01 *P(1,2)^2*PI(2,4) - ...
%     12 *gamma  *f020  * xi01* P(1,1)*P(1,2)* PI(2,5) - ...
%     3* gamma *f110* xi01 * P(1,2)^2*PI(2,5) - ...
%     3.75* gamma *P(1,1)*P(1,2)^2*PI(5,4) - ...
%     7.5* gamma  *h020*   xi01 *P(1,1)*P(1,3)*PI(5,4) - ...
%     7.5* gamma  *h110 *  xi01 *P(1, 2)*P(1,3)*PI(5,4) - ...
%     7.5 *gamma  *hc020 *  xi01 *P(1,1)*P(1,4)*PI(5,4) - ...
%     7.5 *gamma  *hc110  * xi01 *P(1, 2)* P(1,4)* PI(5, 4) - ...
%     7.5 *gamma  *f020   *xi01 *P(1,1)*P(1, 5)*PI(5,4) - ...
%     7.5 *gamma *f110 *xi01 *P(1, 2)* P(1, 5)* PI(5,4) - ...
%     7.5 *gamma * fc020  * xi01 *P(1, 1) *P(1, 6) *PI(5, 4) - ...
%     7.5 *gamma * fc110   *xi01* P(1,2)*P(1, 6)* PI(5, 4) + ...
%     3 *gamma *P(1, 1) *P(1, 2)^2 *PI(5, 5) + ...
%     6 *gamma  *h020   *xi01 *P(1,1) *P(1, 3) *PI(5, 5) + ...
%     6 *gamma  *h110   *xi01 *P(1,  2)* P(1, 3)* PI(5, 5) + ...
%     6 *gamma  *hc020  * xi01 *P(1, 1) *P(1, 4) *PI(5, 5) + ...
%     6 *gamma  *hc110  * xi01 *P(1, 2) *P(1, 4)* PI(5, 5) + ...
%     6 *gamma  *f020   *xi01 *P(1, 1) *P(1, 5) *PI(5, 5) + ...
%     6 *gamma *f110 *xi01 *P(1, 2)* P(1, 5)* PI(5, 5) + ...
%     6 *gamma * fc020*   xi01 *P(1, 1) *P(1, 6) *PI(5, 5) + ...
%     6 *gamma*  fc110 *  xi01 * P(1, 2)* P(1, 6)* PI(5, 5));
% 
% f210=1/(2*l1+l1c -l3)* (3.75* gamma* f110 *xi01* P(1, 1)^2* PI(1, 4) + ... 
%     15* gamma   *f200   *xi01 *P(1, 1) *P(1, 2) *PI(1, 4) - ...
%     3* gamma* f110* xi01* P(1,1)^2*PI(1,5) - ...
%     12* gamma *f200 *xi01*P(1,1)*P(1,2)* PI(1,5) + ...
%     7.5* gamma*  f020*   xi01* P(1, 1)^2* PI(2, 4) + ...
%     7.5* gamma *f110 *xi01 *P(1,1)*P(1,2)*PI(2, 4) - ...
%     6* gamma *  f020 *   xi01 * P(1,1)^2*PI(2,5) -... 
%     6* gamma *f110*xi01*P(1,1)*P(1,2)*PI(2,5) -... 
%     3.75* gamma* P(1,1)^2*P(1,2)*PI(5,4) - ...
%     7.5*gamma*h110*xi01*P(1,1)*P(1,3)*PI(5,4) - ...
%     7.5*gamma*h200*xi01*P(1,2)*P(1,3)*PI(5,4) - ...
%     7.5*gamma*hc110*xi01*P(1,1)*P(1,4)*PI(5,4) - ...
%     7.5*gamma*hc200*xi01*P(1,2)*P(1,4)*PI(5,4) - ...
%     7.5*gamma*f110*xi01*P(1,1)*P(1,5)*PI(5,4) - ...
%     7.5*gamma*f200*xi01*P(1,2)*P(1,5)*PI(5,4) - ...
%     7.5*gamma*fc110*xi01*P(1,1)*P(1,6)*PI(5,4) - ...
%     7.5*gamma*fc200*xi01*P(1,2)*P(1,6)*PI(5,4) + ...
%     3*gamma*P(1,1)^2*P(1,2)*PI(5,5) + ...
%     6*gamma* h110* xi01* P(1,1)*P(1,3)*PI(5,5) + ...
%     6* gamma * h200*xi01*P(1,2)*P(1,3)*PI(5,5) + ...
%     6* gamma*  hc110  * xi01* P(1,1) *P(1,4) *PI(5,5) + ...
%     6* gamma * hc200 * xi01* P(1,2) *P(1,4) *PI(5,5) + ...
%     6* gamma *f110 *xi01 *P(1,1) *P(1,5) *PI(5,5) + ...
%     6* gamma  * f200  * xi01* P(1,2) *P(1,5)* PI(5,5) + ...
%     6* gamma  *fc110 *  xi01 *P(1,1) *P(1,6)* PI(5,5) + ...
%     6* gamma  *fc200*  xi01 *P(1,2)* P(1,6)* PI(5,5));

vecC = [h101;h200;h011;h110;h020;f101;f200;f011;f110;f020;h300;h030;h120;h210;f300;f030;f120;f210];

Coeff_Iterate_1 = [Coeff_Iterate_1,vecC];

end
SSM_Coeff_A_1 = griddedInterpolant(tkr2(:),Coeff_Iterate_1.','spline');

[dXdF, Xtrunc,tkr3] = ftd(Coeff_Iterate_1, tkr2);
DSSM_Coeff_A_1 = griddedInterpolant(tkr3(:),dXdF.','spline');

save('Adiabatic_SSM_coeff.mat','SSM_Coeff_A_1')
save('Adiabatic_SSM_coeffD.mat','DSSM_Coeff_A_1')
% 
Coeff_Iterate_2 = [];
for indf = 1:max(size(tkr3))

    dia = Dalpha(Force_Lorenz(tkr3(indf)));
    l1 = dia(1);
    l1c = conj(l1);
    l2 = dia(3);
    l3 = dia(5);
    alpha = tkr3(indf);
    xi0 = xi_01(alpha);
    xi1 = xi_11(alpha,A);
    xi2 = xi_21(alpha,A);
    P = Valpha(Force_Lorenz(tkr3(indf)),V);
    PI = inv(P);
    PD = ValphaD(alpha,V);
    TempCell = num2cell(SSM_Coeff_A_1(alpha));
    [h101,h200,h011,h110,h020,f101,f200,f011,f110,f020,h300,h030,h120,h210,f300,f030,f120,f210]=deal(TempCell{:});
    TempCell = num2cell(DSSM_Coeff_A_1(alpha));
    [hd101,hd200,hd011,hd110,hd020,fd101,fd200,fd011,fd110,fd020,hd300,hd030,hd120,hd210,fd300,fd030,fd120,fd210]=deal(TempCell{:});
    TempCell = num2cell(conj([h101,h200,h011,h110,h020,f101,f200,f011,f110,f020,h300,h030,h120,h210,f300,f030,f120,f210]));
    [hc011,hc020,hc101,hc110,hc200,fc011,fc020,fc101,fc110,fc200,hc030,hc300,hc210,hc120,fc030,fc300,fc210,fc120] = deal(TempCell{:});


h012 = (-(hd011.*m1.*Mf) + h101.*m1.*Mf.*PD(1, 2).*PI(1, 1) + h101.*m1.*Mf.*PD(2, 2).*PI(1, 2) + h101.*m1.*Mf.*PD(3, 2).*PI(1, 3) + 6.*gamma.*h101.*m1.*xi0.*xi1.*P(1, 2).*PI(1, 4) + ...
     6.*gamma.*h101.*Mf.*xi0.*xi1.*P(1, 2).*PI(1, 4) + h101.*m1.*Mf.*PD(4, 2).*PI(1, 4) - 6.*gamma.*h101.*Mf.*xi0.*xi1.*P(1, 2).*PI(1, 5) + h101.*m1.*Mf.*PD(5, 2).*PI(1, 5) + ...
     h101.*m1.*Mf.*PD(6, 2).*PI(1, 6) + h011.*m1.*Mf.*PD(1, 2).*PI(2, 1) + h011.*m1.*Mf.*PD(2, 2).*PI(2, 2) + h011.*m1.*Mf.*PD(3, 2).*PI(2, 3) + 6.*gamma.*h011.*m1.*xi0.*xi1.*P(1, 2).*PI(2, 4) + ...
     6.*gamma.*h011.*Mf.*xi0.*xi1.*P(1, 2).*PI(2, 4) + h011.*m1.*Mf.*PD(4, 2).*PI(2, 4) - 6.*gamma.*h011.*Mf.*xi0.*xi1.*P(1, 2).*PI(2, 5) + h011.*m1.*Mf.*PD(5, 2).*PI(2, 5) + ...
     h011.*m1.*Mf.*PD(6, 2).*PI(2, 6) - h011.*m1.*Mf.*PD(1, 3).*PI(3, 1) - hc011.*m1.*Mf.*PD(1, 4).*PI(3, 1) - f011.*m1.*Mf.*PD(1, 5).*PI(3, 1) - fc011.*m1.*Mf.*PD(1, 6).*PI(3, 1) - ...
     h011.*m1.*Mf.*PD(2, 3).*PI(3, 2) - hc011.*m1.*Mf.*PD(2, 4).*PI(3, 2) - f011.*m1.*Mf.*PD(2, 5).*PI(3, 2) - fc011.*m1.*Mf.*PD(2, 6).*PI(3, 2) - h011.*m1.*Mf.*PD(3, 3).*PI(3, 3) - ...
     hc011.*m1.*Mf.*PD(3, 4).*PI(3, 3) - f011.*m1.*Mf.*PD(3, 5).*PI(3, 3) - fc011.*m1.*Mf.*PD(3, 6).*PI(3, 3) - 3.*gamma.*m1.*xi1.^2.*P(1, 2).*PI(3, 4) - 3.*gamma.*Mf.*xi1.^2.*P(1, 2).*PI(3, 4) - ...
     6.*gamma.*m1.*xi0.*xi2.*P(1, 2).*PI(3, 4) - 6.*gamma.*Mf.*xi0.*xi2.*P(1, 2).*PI(3, 4) - 6.*gamma.*h011.*m1.*xi0.*xi1.*P(1, 3).*PI(3, 4) - 6.*gamma.*h011.*Mf.*xi0.*xi1.*P(1, 3).*PI(3, 4) - ...
     6.*gamma.*hc011.*m1.*xi0.*xi1.*P(1, 4).*PI(3, 4) - 6.*gamma.*hc011.*Mf.*xi0.*xi1.*P(1, 4).*PI(3, 4) - 6.*f011.*gamma.*m1.*xi0.*xi1.*P(1, 5).*PI(3, 4) - 6.*f011.*gamma.*Mf.*xi0.*xi1.*P(1, 5).*PI(3, 4) - ...
     6.*fc011.*gamma.*m1.*xi0.*xi1.*P(1, 6).*PI(3, 4) - 6.*fc011.*gamma.*Mf.*xi0.*xi1.*P(1, 6).*PI(3, 4) - h011.*m1.*Mf.*PD(4, 3).*PI(3, 4) - hc011.*m1.*Mf.*PD(4, 4).*PI(3, 4) - ...
     f011.*m1.*Mf.*PD(4, 5).*PI(3, 4) - fc011.*m1.*Mf.*PD(4, 6).*PI(3, 4) + 3.*gamma.*Mf.*xi1.^2.*P(1, 2).*PI(3, 5) + 6.*gamma.*Mf.*xi0.*xi2.*P(1, 2).*PI(3, 5) + ...
     6.*gamma.*h011.*Mf.*xi0.*xi1.*P(1, 3).*PI(3, 5) + 6.*gamma.*hc011.*Mf.*xi0.*xi1.*P(1, 4).*PI(3, 5) + 6.*f011.*gamma.*Mf.*xi0.*xi1.*P(1, 5).*PI(3, 5) + 6.*fc011.*gamma.*Mf.*xi0.*xi1.*P(1, 6).*PI(3, 5) - ...
     h011.*m1.*Mf.*PD(5, 3).*PI(3, 5) - hc011.*m1.*Mf.*PD(5, 4).*PI(3, 5) - f011.*m1.*Mf.*PD(5, 5).*PI(3, 5) - fc011.*m1.*Mf.*PD(5, 6).*PI(3, 5) - h011.*m1.*Mf.*PD(6, 3).*PI(3, 6) - ...
     hc011.*m1.*Mf.*PD(6, 4).*PI(3, 6) - f011.*m1.*Mf.*PD(6, 5).*PI(3, 6) - fc011.*m1.*Mf.*PD(6, 6).*PI(3, 6))./((l1c - l2).*m1.*Mf);

h102 = (-(hd101.*m1.*Mf) + h101.*m1.*Mf.*PD(1, 1).*PI(1, 1) + h101.*m1.*Mf.*PD(2, 1).*PI(1, 2) + h101.*m1.*Mf.*PD(3, 1).*PI(1, 3) + 6.*gamma.*h101.*m1.*xi0.*xi1.*P(1, 1).*PI(1, 4) + ...
     6.*gamma.*h101.*Mf.*xi0.*xi1.*P(1, 1).*PI(1, 4) + h101.*m1.*Mf.*PD(4, 1).*PI(1, 4) - 6.*gamma.*h101.*Mf.*xi0.*xi1.*P(1, 1).*PI(1, 5) + h101.*m1.*Mf.*PD(5, 1).*PI(1, 5) + ...
     h101.*m1.*Mf.*PD(6, 1).*PI(1, 6) + h011.*m1.*Mf.*PD(1, 1).*PI(2, 1) + h011.*m1.*Mf.*PD(2, 1).*PI(2, 2) + h011.*m1.*Mf.*PD(3, 1).*PI(2, 3) + 6.*gamma.*h011.*m1.*xi0.*xi1.*P(1, 1).*PI(2, 4) + ...
     6.*gamma.*h011.*Mf.*xi0.*xi1.*P(1, 1).*PI(2, 4) + h011.*m1.*Mf.*PD(4, 1).*PI(2, 4) - 6.*gamma.*h011.*Mf.*xi0.*xi1.*P(1, 1).*PI(2, 5) + h011.*m1.*Mf.*PD(5, 1).*PI(2, 5) + ...
     h011.*m1.*Mf.*PD(6, 1).*PI(2, 6) - h101.*m1.*Mf.*PD(1, 3).*PI(3, 1) - hc101.*m1.*Mf.*PD(1, 4).*PI(3, 1) - f101.*m1.*Mf.*PD(1, 5).*PI(3, 1) - fc101.*m1.*Mf.*PD(1, 6).*PI(3, 1) - ...
     h101.*m1.*Mf.*PD(2, 3).*PI(3, 2) - hc101.*m1.*Mf.*PD(2, 4).*PI(3, 2) - f101.*m1.*Mf.*PD(2, 5).*PI(3, 2) - fc101.*m1.*Mf.*PD(2, 6).*PI(3, 2) - h101.*m1.*Mf.*PD(3, 3).*PI(3, 3) - ...
     hc101.*m1.*Mf.*PD(3, 4).*PI(3, 3) - f101.*m1.*Mf.*PD(3, 5).*PI(3, 3) - fc101.*m1.*Mf.*PD(3, 6).*PI(3, 3) - 3.*gamma.*m1.*xi1.^2.*P(1, 1).*PI(3, 4) - 3.*gamma.*Mf.*xi1.^2.*P(1, 1).*PI(3, 4) - ...
     6.*gamma.*m1.*xi0.*xi2.*P(1, 1).*PI(3, 4) - 6.*gamma.*Mf.*xi0.*xi2.*P(1, 1).*PI(3, 4) - 6.*gamma.*h101.*m1.*xi0.*xi1.*P(1, 3).*PI(3, 4) - 6.*gamma.*h101.*Mf.*xi0.*xi1.*P(1, 3).*PI(3, 4) - ...
     6.*gamma.*hc101.*m1.*xi0.*xi1.*P(1, 4).*PI(3, 4) - 6.*gamma.*hc101.*Mf.*xi0.*xi1.*P(1, 4).*PI(3, 4) - 6.*f101.*gamma.*m1.*xi0.*xi1.*P(1, 5).*PI(3, 4) - 6.*f101.*gamma.*Mf.*xi0.*xi1.*P(1, 5).*PI(3, 4) - ...
     6.*fc101.*gamma.*m1.*xi0.*xi1.*P(1, 6).*PI(3, 4) - 6.*fc101.*gamma.*Mf.*xi0.*xi1.*P(1, 6).*PI(3, 4) - h101.*m1.*Mf.*PD(4, 3).*PI(3, 4) - hc101.*m1.*Mf.*PD(4, 4).*PI(3, 4) - ...
     f101.*m1.*Mf.*PD(4, 5).*PI(3, 4) - fc101.*m1.*Mf.*PD(4, 6).*PI(3, 4) + 3.*gamma.*Mf.*xi1.^2.*P(1, 1).*PI(3, 5) + 6.*gamma.*Mf.*xi0.*xi2.*P(1, 1).*PI(3, 5) + ...
     6.*gamma.*h101.*Mf.*xi0.*xi1.*P(1, 3).*PI(3, 5) + 6.*gamma.*hc101.*Mf.*xi0.*xi1.*P(1, 4).*PI(3, 5) + 6.*f101.*gamma.*Mf.*xi0.*xi1.*P(1, 5).*PI(3, 5) + 6.*fc101.*gamma.*Mf.*xi0.*xi1.*P(1, 6).*PI(3, 5) - ...
     h101.*m1.*Mf.*PD(5, 3).*PI(3, 5) - hc101.*m1.*Mf.*PD(5, 4).*PI(3, 5) - f101.*m1.*Mf.*PD(5, 5).*PI(3, 5) - fc101.*m1.*Mf.*PD(5, 6).*PI(3, 5) - h101.*m1.*Mf.*PD(6, 3).*PI(3, 6) - ...
     hc101.*m1.*Mf.*PD(6, 4).*PI(3, 6) - f101.*m1.*Mf.*PD(6, 5).*PI(3, 6) - fc101.*m1.*Mf.*PD(6, 6).*PI(3, 6))./((l1 - l2).*m1.*Mf);

h201 = (-(hd200.*m1.*Mf) + 2.*h200.*m1.*Mf.*PD(1, 1).*PI(1, 1) + 2.*h200.*m1.*Mf.*PD(2, 1).*PI(1, 2) + 2.*h200.*m1.*Mf.*PD(3, 1).*PI(1, 3) + 12.*gamma.*h200.*m1.*xi0.*xi1.*P(1, 1).*PI(1, 4) + ...
     12.*gamma.*h200.*Mf.*xi0.*xi1.*P(1, 1).*PI(1, 4) + 3.*gamma.*h101.*m1.*xi0.*P(1, 1).^2.*PI(1, 4) + 3.*gamma.*h101.*Mf.*xi0.*P(1, 1).^2.*PI(1, 4) + 2.*h200.*m1.*Mf.*PD(4, 1).*PI(1, 4) - ...
     12.*gamma.*h200.*Mf.*xi0.*xi1.*P(1, 1).*PI(1, 5) - 3.*gamma.*h101.*Mf.*xi0.*P(1, 1).^2.*PI(1, 5) + 2.*h200.*m1.*Mf.*PD(5, 1).*PI(1, 5) + 2.*h200.*m1.*Mf.*PD(6, 1).*PI(1, 6) + ...
     h110.*m1.*Mf.*PD(1, 1).*PI(2, 1) + h110.*m1.*Mf.*PD(2, 1).*PI(2, 2) + h110.*m1.*Mf.*PD(3, 1).*PI(2, 3) + 6.*gamma.*h110.*m1.*xi0.*xi1.*P(1, 1).*PI(2, 4) + ...
     6.*gamma.*h110.*Mf.*xi0.*xi1.*P(1, 1).*PI(2, 4) + 3.*gamma.*h011.*m1.*xi0.*P(1, 1).^2.*PI(2, 4) + 3.*gamma.*h011.*Mf.*xi0.*P(1, 1).^2.*PI(2, 4) + h110.*m1.*Mf.*PD(4, 1).*PI(2, 4) - ...
     6.*gamma.*h110.*Mf.*xi0.*xi1.*P(1, 1).*PI(2, 5) - 3.*gamma.*h011.*Mf.*xi0.*P(1, 1).^2.*PI(2, 5) + h110.*m1.*Mf.*PD(5, 1).*PI(2, 5) + h110.*m1.*Mf.*PD(6, 1).*PI(2, 6) - ...
     h200.*m1.*Mf.*PD(1, 3).*PI(3, 1) - hc200.*m1.*Mf.*PD(1, 4).*PI(3, 1) - f200.*m1.*Mf.*PD(1, 5).*PI(3, 1) - fc200.*m1.*Mf.*PD(1, 6).*PI(3, 1) - h200.*m1.*Mf.*PD(2, 3).*PI(3, 2) - ...
     hc200.*m1.*Mf.*PD(2, 4).*PI(3, 2) - f200.*m1.*Mf.*PD(2, 5).*PI(3, 2) - fc200.*m1.*Mf.*PD(2, 6).*PI(3, 2) - h200.*m1.*Mf.*PD(3, 3).*PI(3, 3) - hc200.*m1.*Mf.*PD(3, 4).*PI(3, 3) - ...
     f200.*m1.*Mf.*PD(3, 5).*PI(3, 3) - fc200.*m1.*Mf.*PD(3, 6).*PI(3, 3) - 3.*gamma.*m1.*xi1.*P(1, 1).^2.*PI(3, 4) - 3.*gamma.*Mf.*xi1.*P(1, 1).^2.*PI(3, 4) - ...
     6.*gamma.*h200.*m1.*xi0.*xi1.*P(1, 3).*PI(3, 4) - 6.*gamma.*h200.*Mf.*xi0.*xi1.*P(1, 3).*PI(3, 4) - 6.*gamma.*h101.*m1.*xi0.*P(1, 1).*P(1, 3).*PI(3, 4) - ...
     6.*gamma.*h101.*Mf.*xi0.*P(1, 1).*P(1, 3).*PI(3, 4) - 6.*gamma.*hc200.*m1.*xi0.*xi1.*P(1, 4).*PI(3, 4) - 6.*gamma.*hc200.*Mf.*xi0.*xi1.*P(1, 4).*PI(3, 4) - ...
     6.*gamma.*hc101.*m1.*xi0.*P(1, 1).*P(1, 4).*PI(3, 4) - 6.*gamma.*hc101.*Mf.*xi0.*P(1, 1).*P(1, 4).*PI(3, 4) - 6.*f200.*gamma.*m1.*xi0.*xi1.*P(1, 5).*PI(3, 4) -... 
     6.*f200.*gamma.*Mf.*xi0.*xi1.*P(1, 5).*PI(3, 4) - 6.*f101.*gamma.*m1.*xi0.*P(1, 1).*P(1, 5).*PI(3, 4) - 6.*f101.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 5).*PI(3, 4) - ...
     6.*fc200.*gamma.*m1.*xi0.*xi1.*P(1, 6).*PI(3, 4) - 6.*fc200.*gamma.*Mf.*xi0.*xi1.*P(1, 6).*PI(3, 4) - 6.*fc101.*gamma.*m1.*xi0.*P(1, 1).*P(1, 6).*PI(3, 4) - ...
     6.*fc101.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 6).*PI(3, 4) - h200.*m1.*Mf.*PD(4, 3).*PI(3, 4) - hc200.*m1.*Mf.*PD(4, 4).*PI(3, 4) - f200.*m1.*Mf.*PD(4, 5).*PI(3, 4) - fc200.*m1.*Mf.*PD(4, 6).*PI(3, 4) + ...
     3.*gamma.*Mf.*xi1.*P(1, 1).^2.*PI(3, 5) + 6.*gamma.*h200.*Mf.*xi0.*xi1.*P(1, 3).*PI(3, 5) + 6.*gamma.*h101.*Mf.*xi0.*P(1, 1).*P(1, 3).*PI(3, 5) + 6.*gamma.*hc200.*Mf.*xi0.*xi1.*P(1, 4).*PI(3, 5) + ...
     6.*gamma.*hc101.*Mf.*xi0.*P(1, 1).*P(1, 4).*PI(3, 5) + 6.*f200.*gamma.*Mf.*xi0.*xi1.*P(1, 5).*PI(3, 5) + 6.*f101.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 5).*PI(3, 5) + ...
     6.*fc200.*gamma.*Mf.*xi0.*xi1.*P(1, 6).*PI(3, 5) + 6.*fc101.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 6).*PI(3, 5) - h200.*m1.*Mf.*PD(5, 3).*PI(3, 5) - hc200.*m1.*Mf.*PD(5, 4).*PI(3, 5) - ...
     f200.*m1.*Mf.*PD(5, 5).*PI(3, 5) - fc200.*m1.*Mf.*PD(5, 6).*PI(3, 5) - h200.*m1.*Mf.*PD(6, 3).*PI(3, 6) - hc200.*m1.*Mf.*PD(6, 4).*PI(3, 6) - f200.*m1.*Mf.*PD(6, 5).*PI(3, 6) - ...
     fc200.*m1.*Mf.*PD(6, 6).*PI(3, 6))./((2.*l1 - l2).*m1.*Mf);

h021 = (-(hd020.*m1.*Mf) + h110.*m1.*Mf.*PD(1, 2).*PI(1, 1) + h110.*m1.*Mf.*PD(2, 2).*PI(1, 2) + h110.*m1.*Mf.*PD(3, 2).*PI(1, 3) + 6.*gamma.*h110.*m1.*xi0.*xi1.*P(1, 2).*PI(1, 4) + ...
     6.*gamma.*h110.*Mf.*xi0.*xi1.*P(1, 2).*PI(1, 4) + 3.*gamma.*h101.*m1.*xi0.*P(1, 2).^2.*PI(1, 4) + 3.*gamma.*h101.*Mf.*xi0.*P(1, 2).^2.*PI(1, 4) + h110.*m1.*Mf.*PD(4, 2).*PI(1, 4) - ...
     6.*gamma.*h110.*Mf.*xi0.*xi1.*P(1, 2).*PI(1, 5) - 3.*gamma.*h101.*Mf.*xi0.*P(1, 2).^2.*PI(1, 5) + h110.*m1.*Mf.*PD(5, 2).*PI(1, 5) + h110.*m1.*Mf.*PD(6, 2).*PI(1, 6) + ...
     2.*h020.*m1.*Mf.*PD(1, 2).*PI(2, 1) + 2.*h020.*m1.*Mf.*PD(2, 2).*PI(2, 2) + 2.*h020.*m1.*Mf.*PD(3, 2).*PI(2, 3) + 12.*gamma.*h020.*m1.*xi0.*xi1.*P(1, 2).*PI(2, 4) + ...
     12.*gamma.*h020.*Mf.*xi0.*xi1.*P(1, 2).*PI(2, 4) + 3.*gamma.*h011.*m1.*xi0.*P(1, 2).^2.*PI(2, 4) + 3.*gamma.*h011.*Mf.*xi0.*P(1, 2).^2.*PI(2, 4) + 2.*h020.*m1.*Mf.*PD(4, 2).*PI(2, 4) - ...
     12.*gamma.*h020.*Mf.*xi0.*xi1.*P(1, 2).*PI(2, 5) - 3.*gamma.*h011.*Mf.*xi0.*P(1, 2).^2.*PI(2, 5) + 2.*h020.*m1.*Mf.*PD(5, 2).*PI(2, 5) + 2.*h020.*m1.*Mf.*PD(6, 2).*PI(2, 6) - ...
     h020.*m1.*Mf.*PD(1, 3).*PI(3, 1) - hc020.*m1.*Mf.*PD(1, 4).*PI(3, 1) - f020.*m1.*Mf.*PD(1, 5).*PI(3, 1) - fc020.*m1.*Mf.*PD(1, 6).*PI(3, 1) - h020.*m1.*Mf.*PD(2, 3).*PI(3, 2) - ...
     hc020.*m1.*Mf.*PD(2, 4).*PI(3, 2) - f020.*m1.*Mf.*PD(2, 5).*PI(3, 2) - fc020.*m1.*Mf.*PD(2, 6).*PI(3, 2) - h020.*m1.*Mf.*PD(3, 3).*PI(3, 3) - hc020.*m1.*Mf.*PD(3, 4).*PI(3, 3) - ...
     f020.*m1.*Mf.*PD(3, 5).*PI(3, 3) - fc020.*m1.*Mf.*PD(3, 6).*PI(3, 3) - 3.*gamma.*m1.*xi1.*P(1, 2).^2.*PI(3, 4) - 3.*gamma.*Mf.*xi1.*P(1, 2).^2.*PI(3, 4) - ...
     6.*gamma.*h020.*m1.*xi0.*xi1.*P(1, 3).*PI(3, 4) - 6.*gamma.*h020.*Mf.*xi0.*xi1.*P(1, 3).*PI(3, 4) - 6.*gamma.*h011.*m1.*xi0.*P(1, 2).*P(1, 3).*PI(3, 4) - ...
     6.*gamma.*h011.*Mf.*xi0.*P(1, 2).*P(1, 3).*PI(3, 4) - 6.*gamma.*hc020.*m1.*xi0.*xi1.*P(1, 4).*PI(3, 4) - 6.*gamma.*hc020.*Mf.*xi0.*xi1.*P(1, 4).*PI(3, 4) - ...
     6.*gamma.*hc011.*m1.*xi0.*P(1, 2).*P(1, 4).*PI(3, 4) - 6.*gamma.*hc011.*Mf.*xi0.*P(1, 2).*P(1, 4).*PI(3, 4) - 6.*f020.*gamma.*m1.*xi0.*xi1.*P(1, 5).*PI(3, 4) -... 
     6.*f020.*gamma.*Mf.*xi0.*xi1.*P(1, 5).*PI(3, 4) - 6.*f011.*gamma.*m1.*xi0.*P(1, 2).*P(1, 5).*PI(3, 4) - 6.*f011.*gamma.*Mf.*xi0.*P(1, 2).*P(1, 5).*PI(3, 4) - ...
     6.*fc020.*gamma.*m1.*xi0.*xi1.*P(1, 6).*PI(3, 4) - 6.*fc020.*gamma.*Mf.*xi0.*xi1.*P(1, 6).*PI(3, 4) - 6.*fc011.*gamma.*m1.*xi0.*P(1, 2).*P(1, 6).*PI(3, 4) - ...
     6.*fc011.*gamma.*Mf.*xi0.*P(1, 2).*P(1, 6).*PI(3, 4) - h020.*m1.*Mf.*PD(4, 3).*PI(3, 4) - hc020.*m1.*Mf.*PD(4, 4).*PI(3, 4) - f020.*m1.*Mf.*PD(4, 5).*PI(3, 4) - fc020.*m1.*Mf.*PD(4, 6).*PI(3, 4) + ...
     3.*gamma.*Mf.*xi1.*P(1, 2).^2.*PI(3, 5) + 6.*gamma.*h020.*Mf.*xi0.*xi1.*P(1, 3).*PI(3, 5) + 6.*gamma.*h011.*Mf.*xi0.*P(1, 2).*P(1, 3).*PI(3, 5) + 6.*gamma.*hc020.*Mf.*xi0.*xi1.*P(1, 4).*PI(3, 5) + ...
     6.*gamma.*hc011.*Mf.*xi0.*P(1, 2).*P(1, 4).*PI(3, 5) + 6.*f020.*gamma.*Mf.*xi0.*xi1.*P(1, 5).*PI(3, 5) + 6.*f011.*gamma.*Mf.*xi0.*P(1, 2).*P(1, 5).*PI(3, 5) + ...
     6.*fc020.*gamma.*Mf.*xi0.*xi1.*P(1, 6).*PI(3, 5) + 6.*fc011.*gamma.*Mf.*xi0.*P(1, 2).*P(1, 6).*PI(3, 5) - h020.*m1.*Mf.*PD(5, 3).*PI(3, 5) - hc020.*m1.*Mf.*PD(5, 4).*PI(3, 5) - ...
     f020.*m1.*Mf.*PD(5, 5).*PI(3, 5) - fc020.*m1.*Mf.*PD(5, 6).*PI(3, 5) - h020.*m1.*Mf.*PD(6, 3).*PI(3, 6) - hc020.*m1.*Mf.*PD(6, 4).*PI(3, 6) - f020.*m1.*Mf.*PD(6, 5).*PI(3, 6) - ...
     fc020.*m1.*Mf.*PD(6, 6).*PI(3, 6))./((2.*l1c - l2).*m1.*Mf);


h111 = (-(hd110.*m1.*Mf) + h110.*m1.*Mf.*PD(1, 1).*PI(1, 1) + 2.*h200.*m1.*Mf.*PD(1, 2).*PI(1, 1) + h110.*m1.*Mf.*PD(2, 1).*PI(1, 2) + 2.*h200.*m1.*Mf.*PD(2, 2).*PI(1, 2) + ...
     h110.*m1.*Mf.*PD(3, 1).*PI(1, 3) + 2.*h200.*m1.*Mf.*PD(3, 2).*PI(1, 3) + 6.*gamma.*h110.*m1.*xi0.*xi1.*P(1, 1).*PI(1, 4) + 6.*gamma.*h110.*Mf.*xi0.*xi1.*P(1, 1).*PI(1, 4) + ...
     12.*gamma.*h200.*m1.*xi0.*xi1.*P(1, 2).*PI(1, 4) + 12.*gamma.*h200.*Mf.*xi0.*xi1.*P(1, 2).*PI(1, 4) + 6.*gamma.*h101.*m1.*xi0.*P(1, 1).*P(1, 2).*PI(1, 4) + ...
     6.*gamma.*h101.*Mf.*xi0.*P(1, 1).*P(1, 2).*PI(1, 4) + h110.*m1.*Mf.*PD(4, 1).*PI(1, 4) + 2.*h200.*m1.*Mf.*PD(4, 2).*PI(1, 4) - 6.*gamma.*h110.*Mf.*xi0.*xi1.*P(1, 1).*PI(1, 5) - ...
     12.*gamma.*h200.*Mf.*xi0.*xi1.*P(1, 2).*PI(1, 5) - 6.*gamma.*h101.*Mf.*xi0.*P(1, 1).*P(1, 2).*PI(1, 5) + h110.*m1.*Mf.*PD(5, 1).*PI(1, 5) + 2.*h200.*m1.*Mf.*PD(5, 2).*PI(1, 5) + ...
     h110.*m1.*Mf.*PD(6, 1).*PI(1, 6) + 2.*h200.*m1.*Mf.*PD(6, 2).*PI(1, 6) + 2.*h020.*m1.*Mf.*PD(1, 1).*PI(2, 1) + h110.*m1.*Mf.*PD(1, 2).*PI(2, 1) + 2.*h020.*m1.*Mf.*PD(2, 1).*PI(2, 2) + ...
     h110.*m1.*Mf.*PD(2, 2).*PI(2, 2) + 2.*h020.*m1.*Mf.*PD(3, 1).*PI(2, 3) + h110.*m1.*Mf.*PD(3, 2).*PI(2, 3) + 12.*gamma.*h020.*m1.*xi0.*xi1.*P(1, 1).*PI(2, 4) + ...
     12.*gamma.*h020.*Mf.*xi0.*xi1.*P(1, 1).*PI(2, 4) + 6.*gamma.*h110.*m1.*xi0.*xi1.*P(1, 2).*PI(2, 4) + 6.*gamma.*h110.*Mf.*xi0.*xi1.*P(1, 2).*PI(2, 4) + ...
     6.*gamma.*h011.*m1.*xi0.*P(1, 1).*P(1, 2).*PI(2, 4) + 6.*gamma.*h011.*Mf.*xi0.*P(1, 1).*P(1, 2).*PI(2, 4) + 2.*h020.*m1.*Mf.*PD(4, 1).*PI(2, 4) + h110.*m1.*Mf.*PD(4, 2).*PI(2, 4) - ...
     12.*gamma.*h020.*Mf.*xi0.*xi1.*P(1, 1).*PI(2, 5) - 6.*gamma.*h110.*Mf.*xi0.*xi1.*P(1, 2).*PI(2, 5) - 6.*gamma.*h011.*Mf.*xi0.*P(1, 1).*P(1, 2).*PI(2, 5) + 2.*h020.*m1.*Mf.*PD(5, 1).*PI(2, 5) + ...
     h110.*m1.*Mf.*PD(5, 2).*PI(2, 5) + 2.*h020.*m1.*Mf.*PD(6, 1).*PI(2, 6) + h110.*m1.*Mf.*PD(6, 2).*PI(2, 6) - h110.*m1.*Mf.*PD(1, 3).*PI(3, 1) - hc110.*m1.*Mf.*PD(1, 4).*PI(3, 1) - ...
     f110.*m1.*Mf.*PD(1, 5).*PI(3, 1) - fc110.*m1.*Mf.*PD(1, 6).*PI(3, 1) - h110.*m1.*Mf.*PD(2, 3).*PI(3, 2) - hc110.*m1.*Mf.*PD(2, 4).*PI(3, 2) - f110.*m1.*Mf.*PD(2, 5).*PI(3, 2) - ...
     fc110.*m1.*Mf.*PD(2, 6).*PI(3, 2) - h110.*m1.*Mf.*PD(3, 3).*PI(3, 3) - hc110.*m1.*Mf.*PD(3, 4).*PI(3, 3) - f110.*m1.*Mf.*PD(3, 5).*PI(3, 3) - fc110.*m1.*Mf.*PD(3, 6).*PI(3, 3) - ...
     6.*gamma.*m1.*xi1.*P(1, 1).*P(1, 2).*PI(3, 4) - 6.*gamma.*Mf.*xi1.*P(1, 1).*P(1, 2).*PI(3, 4) - 6.*gamma.*h110.*m1.*xi0.*xi1.*P(1, 3).*PI(3, 4) - 6.*gamma.*h110.*Mf.*xi0.*xi1.*P(1, 3).*PI(3, 4) - ...
     6.*gamma.*h011.*m1.*xi0.*P(1, 1).*P(1, 3).*PI(3, 4) - 6.*gamma.*h011.*Mf.*xi0.*P(1, 1).*P(1, 3).*PI(3, 4) - 6.*gamma.*h101.*m1.*xi0.*P(1, 2).*P(1, 3).*PI(3, 4) - ...
     6.*gamma.*h101.*Mf.*xi0.*P(1, 2).*P(1, 3).*PI(3, 4) - 6.*gamma.*hc110.*m1.*xi0.*xi1.*P(1, 4).*PI(3, 4) - 6.*gamma.*hc110.*Mf.*xi0.*xi1.*P(1, 4).*PI(3, 4) - ...
     6.*gamma.*hc011.*m1.*xi0.*P(1, 1).*P(1, 4).*PI(3, 4) - 6.*gamma.*hc011.*Mf.*xi0.*P(1, 1).*P(1, 4).*PI(3, 4) - 6.*gamma.*hc101.*m1.*xi0.*P(1, 2).*P(1, 4).*PI(3, 4) - ...
     6.*gamma.*hc101.*Mf.*xi0.*P(1, 2).*P(1, 4).*PI(3, 4) - 6.*f110.*gamma.*m1.*xi0.*xi1.*P(1, 5).*PI(3, 4) - 6.*f110.*gamma.*Mf.*xi0.*xi1.*P(1, 5).*PI(3, 4) - ...
     6.*f011.*gamma.*m1.*xi0.*P(1, 1).*P(1, 5).*PI(3, 4) - 6.*f011.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 5).*PI(3, 4) - 6.*f101.*gamma.*m1.*xi0.*P(1, 2).*P(1, 5).*PI(3, 4) - ...
     6.*f101.*gamma.*Mf.*xi0.*P(1, 2).*P(1, 5).*PI(3, 4) - 6.*fc110.*gamma.*m1.*xi0.*xi1.*P(1, 6).*PI(3, 4) - 6.*fc110.*gamma.*Mf.*xi0.*xi1.*P(1, 6).*PI(3, 4) - ...
     6.*fc011.*gamma.*m1.*xi0.*P(1, 1).*P(1, 6).*PI(3, 4) - 6.*fc011.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 6).*PI(3, 4) - 6.*fc101.*gamma.*m1.*xi0.*P(1, 2).*P(1, 6).*PI(3, 4) - ...
     6.*fc101.*gamma.*Mf.*xi0.*P(1, 2).*P(1, 6).*PI(3, 4) - h110.*m1.*Mf.*PD(4, 3).*PI(3, 4) - hc110.*m1.*Mf.*PD(4, 4).*PI(3, 4) - f110.*m1.*Mf.*PD(4, 5).*PI(3, 4) - fc110.*m1.*Mf.*PD(4, 6).*PI(3, 4) + ...
     6.*gamma.*Mf.*xi1.*P(1, 1).*P(1, 2).*PI(3, 5) + 6.*gamma.*h110.*Mf.*xi0.*xi1.*P(1, 3).*PI(3, 5) + 6.*gamma.*h011.*Mf.*xi0.*P(1, 1).*P(1, 3).*PI(3, 5) + ...
     6.*gamma.*h101.*Mf.*xi0.*P(1, 2).*P(1, 3).*PI(3, 5) + 6.*gamma.*hc110.*Mf.*xi0.*xi1.*P(1, 4).*PI(3, 5) + 6.*gamma.*hc011.*Mf.*xi0.*P(1, 1).*P(1, 4).*PI(3, 5) + ...
     6.*gamma.*hc101.*Mf.*xi0.*P(1, 2).*P(1, 4).*PI(3, 5) + 6.*f110.*gamma.*Mf.*xi0.*xi1.*P(1, 5).*PI(3, 5) + 6.*f011.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 5).*PI(3, 5) + ...
     6.*f101.*gamma.*Mf.*xi0.*P(1, 2).*P(1, 5).*PI(3, 5) + 6.*fc110.*gamma.*Mf.*xi0.*xi1.*P(1, 6).*PI(3, 5) + 6.*fc011.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 6).*PI(3, 5) + ...
     6.*fc101.*gamma.*Mf.*xi0.*P(1, 2).*P(1, 6).*PI(3, 5) - h110.*m1.*Mf.*PD(5, 3).*PI(3, 5) - hc110.*m1.*Mf.*PD(5, 4).*PI(3, 5) - f110.*m1.*Mf.*PD(5, 5).*PI(3, 5) - fc110.*m1.*Mf.*PD(5, 6).*PI(3, 5) - ...
     h110.*m1.*Mf.*PD(6, 3).*PI(3, 6) - hc110.*m1.*Mf.*PD(6, 4).*PI(3, 6) - f110.*m1.*Mf.*PD(6, 5).*PI(3, 6) - fc110.*m1.*Mf.*PD(6, 6).*PI(3, 6))./((l1 + l1c - l2).*m1.*Mf);

 

f012 = (-(fd011.*m1.*Mf) + f101.*m1.*Mf.*PD(1, 2).*PI(1, 1) + f101.*m1.*Mf.*PD(2, 2).*PI(1, 2) + f101.*m1.*Mf.*PD(3, 2).*PI(1, 3) + 6.*f101.*gamma.*m1.*xi0.*xi1.*P(1, 2).*PI(1, 4) + ...
     6.*f101.*gamma.*Mf.*xi0.*xi1.*P(1, 2).*PI(1, 4) + f101.*m1.*Mf.*PD(4, 2).*PI(1, 4) - 6.*f101.*gamma.*Mf.*xi0.*xi1.*P(1, 2).*PI(1, 5) + f101.*m1.*Mf.*PD(5, 2).*PI(1, 5) + ...
     f101.*m1.*Mf.*PD(6, 2).*PI(1, 6) + f011.*m1.*Mf.*PD(1, 2).*PI(2, 1) + f011.*m1.*Mf.*PD(2, 2).*PI(2, 2) + f011.*m1.*Mf.*PD(3, 2).*PI(2, 3) + 6.*f011.*gamma.*m1.*xi0.*xi1.*P(1, 2).*PI(2, 4) + ...
     6.*f011.*gamma.*Mf.*xi0.*xi1.*P(1, 2).*PI(2, 4) + f011.*m1.*Mf.*PD(4, 2).*PI(2, 4) - 6.*f011.*gamma.*Mf.*xi0.*xi1.*P(1, 2).*PI(2, 5) + f011.*m1.*Mf.*PD(5, 2).*PI(2, 5) + ...
     f011.*m1.*Mf.*PD(6, 2).*PI(2, 6) - h011.*m1.*Mf.*PD(1, 3).*PI(5, 1) - hc011.*m1.*Mf.*PD(1, 4).*PI(5, 1) - f011.*m1.*Mf.*PD(1, 5).*PI(5, 1) - fc011.*m1.*Mf.*PD(1, 6).*PI(5, 1) - ...
     h011.*m1.*Mf.*PD(2, 3).*PI(5, 2) - hc011.*m1.*Mf.*PD(2, 4).*PI(5, 2) - f011.*m1.*Mf.*PD(2, 5).*PI(5, 2) - fc011.*m1.*Mf.*PD(2, 6).*PI(5, 2) - h011.*m1.*Mf.*PD(3, 3).*PI(5, 3) - ...
     hc011.*m1.*Mf.*PD(3, 4).*PI(5, 3) - f011.*m1.*Mf.*PD(3, 5).*PI(5, 3) - fc011.*m1.*Mf.*PD(3, 6).*PI(5, 3) - 3.*gamma.*m1.*xi1.^2.*P(1, 2).*PI(5, 4) - 3.*gamma.*Mf.*xi1.^2.*P(1, 2).*PI(5, 4) - ...
     6.*gamma.*m1.*xi0.*xi2.*P(1, 2).*PI(5, 4) - 6.*gamma.*Mf.*xi0.*xi2.*P(1, 2).*PI(5, 4) - 6.*gamma.*h011.*m1.*xi0.*xi1.*P(1, 3).*PI(5, 4) - 6.*gamma.*h011.*Mf.*xi0.*xi1.*P(1, 3).*PI(5, 4) - ...
     6.*gamma.*hc011.*m1.*xi0.*xi1.*P(1, 4).*PI(5, 4) - 6.*gamma.*hc011.*Mf.*xi0.*xi1.*P(1, 4).*PI(5, 4) - 6.*f011.*gamma.*m1.*xi0.*xi1.*P(1, 5).*PI(5, 4) - 6.*f011.*gamma.*Mf.*xi0.*xi1.*P(1, 5).*PI(5, 4) - ...
     6.*fc011.*gamma.*m1.*xi0.*xi1.*P(1, 6).*PI(5, 4) - 6.*fc011.*gamma.*Mf.*xi0.*xi1.*P(1, 6).*PI(5, 4) - h011.*m1.*Mf.*PD(4, 3).*PI(5, 4) - hc011.*m1.*Mf.*PD(4, 4).*PI(5, 4) - ...
     f011.*m1.*Mf.*PD(4, 5).*PI(5, 4) - fc011.*m1.*Mf.*PD(4, 6).*PI(5, 4) + 3.*gamma.*Mf.*xi1.^2.*P(1, 2).*PI(5, 5) + 6.*gamma.*Mf.*xi0.*xi2.*P(1, 2).*PI(5, 5) + ...
     6.*gamma.*h011.*Mf.*xi0.*xi1.*P(1, 3).*PI(5, 5) + 6.*gamma.*hc011.*Mf.*xi0.*xi1.*P(1, 4).*PI(5, 5) + 6.*f011.*gamma.*Mf.*xi0.*xi1.*P(1, 5).*PI(5, 5) + 6.*fc011.*gamma.*Mf.*xi0.*xi1.*P(1, 6).*PI(5, 5) - ...
     h011.*m1.*Mf.*PD(5, 3).*PI(5, 5) - hc011.*m1.*Mf.*PD(5, 4).*PI(5, 5) - f011.*m1.*Mf.*PD(5, 5).*PI(5, 5) - fc011.*m1.*Mf.*PD(5, 6).*PI(5, 5) - h011.*m1.*Mf.*PD(6, 3).*PI(5, 6) - ...
     hc011.*m1.*Mf.*PD(6, 4).*PI(5, 6) - f011.*m1.*Mf.*PD(6, 5).*PI(5, 6) - fc011.*m1.*Mf.*PD(6, 6).*PI(5, 6))./((l1c - l3).*m1.*Mf);

f102 = (-(fd101.*m1.*Mf) + f101.*m1.*Mf.*PD(1, 1).*PI(1, 1) + f101.*m1.*Mf.*PD(2, 1).*PI(1, 2) + f101.*m1.*Mf.*PD(3, 1).*PI(1, 3) + 6.*f101.*gamma.*m1.*xi0.*xi1.*P(1, 1).*PI(1, 4) + ...
     6.*f101.*gamma.*Mf.*xi0.*xi1.*P(1, 1).*PI(1, 4) + f101.*m1.*Mf.*PD(4, 1).*PI(1, 4) - 6.*f101.*gamma.*Mf.*xi0.*xi1.*P(1, 1).*PI(1, 5) + f101.*m1.*Mf.*PD(5, 1).*PI(1, 5) + ...
     f101.*m1.*Mf.*PD(6, 1).*PI(1, 6) + f011.*m1.*Mf.*PD(1, 1).*PI(2, 1) + f011.*m1.*Mf.*PD(2, 1).*PI(2, 2) + f011.*m1.*Mf.*PD(3, 1).*PI(2, 3) + 6.*f011.*gamma.*m1.*xi0.*xi1.*P(1, 1).*PI(2, 4) + ...
     6.*f011.*gamma.*Mf.*xi0.*xi1.*P(1, 1).*PI(2, 4) + f011.*m1.*Mf.*PD(4, 1).*PI(2, 4) - 6.*f011.*gamma.*Mf.*xi0.*xi1.*P(1, 1).*PI(2, 5) + f011.*m1.*Mf.*PD(5, 1).*PI(2, 5) + ...
     f011.*m1.*Mf.*PD(6, 1).*PI(2, 6) - h101.*m1.*Mf.*PD(1, 3).*PI(5, 1) - hc101.*m1.*Mf.*PD(1, 4).*PI(5, 1) - f101.*m1.*Mf.*PD(1, 5).*PI(5, 1) - fc101.*m1.*Mf.*PD(1, 6).*PI(5, 1) - ...
     h101.*m1.*Mf.*PD(2, 3).*PI(5, 2) - hc101.*m1.*Mf.*PD(2, 4).*PI(5, 2) - f101.*m1.*Mf.*PD(2, 5).*PI(5, 2) - fc101.*m1.*Mf.*PD(2, 6).*PI(5, 2) - h101.*m1.*Mf.*PD(3, 3).*PI(5, 3) - ...
     hc101.*m1.*Mf.*PD(3, 4).*PI(5, 3) - f101.*m1.*Mf.*PD(3, 5).*PI(5, 3) - fc101.*m1.*Mf.*PD(3, 6).*PI(5, 3) - 3.*gamma.*m1.*xi1.^2.*P(1, 1).*PI(5, 4) - 3.*gamma.*Mf.*xi1.^2.*P(1, 1).*PI(5, 4) - ...
     6.*gamma.*m1.*xi0.*xi2.*P(1, 1).*PI(5, 4) - 6.*gamma.*Mf.*xi0.*xi2.*P(1, 1).*PI(5, 4) - 6.*gamma.*h101.*m1.*xi0.*xi1.*P(1, 3).*PI(5, 4) - 6.*gamma.*h101.*Mf.*xi0.*xi1.*P(1, 3).*PI(5, 4) - ...
     6.*gamma.*hc101.*m1.*xi0.*xi1.*P(1, 4).*PI(5, 4) - 6.*gamma.*hc101.*Mf.*xi0.*xi1.*P(1, 4).*PI(5, 4) - 6.*f101.*gamma.*m1.*xi0.*xi1.*P(1, 5).*PI(5, 4) - 6.*f101.*gamma.*Mf.*xi0.*xi1.*P(1, 5).*PI(5, 4) - ...
     6.*fc101.*gamma.*m1.*xi0.*xi1.*P(1, 6).*PI(5, 4) - 6.*fc101.*gamma.*Mf.*xi0.*xi1.*P(1, 6).*PI(5, 4) - h101.*m1.*Mf.*PD(4, 3).*PI(5, 4) - hc101.*m1.*Mf.*PD(4, 4).*PI(5, 4) - ...
     f101.*m1.*Mf.*PD(4, 5).*PI(5, 4) - fc101.*m1.*Mf.*PD(4, 6).*PI(5, 4) + 3.*gamma.*Mf.*xi1.^2.*P(1, 1).*PI(5, 5) + 6.*gamma.*Mf.*xi0.*xi2.*P(1, 1).*PI(5, 5) + ...
     6.*gamma.*h101.*Mf.*xi0.*xi1.*P(1, 3).*PI(5, 5) + 6.*gamma.*hc101.*Mf.*xi0.*xi1.*P(1, 4).*PI(5, 5) + 6.*f101.*gamma.*Mf.*xi0.*xi1.*P(1, 5).*PI(5, 5) + 6.*fc101.*gamma.*Mf.*xi0.*xi1.*P(1, 6).*PI(5, 5) - ...
     h101.*m1.*Mf.*PD(5, 3).*PI(5, 5) - hc101.*m1.*Mf.*PD(5, 4).*PI(5, 5) - f101.*m1.*Mf.*PD(5, 5).*PI(5, 5) - fc101.*m1.*Mf.*PD(5, 6).*PI(5, 5) - h101.*m1.*Mf.*PD(6, 3).*PI(5, 6) - ...
     hc101.*m1.*Mf.*PD(6, 4).*PI(5, 6) - f101.*m1.*Mf.*PD(6, 5).*PI(5, 6) - fc101.*m1.*Mf.*PD(6, 6).*PI(5, 6))./((l1 - l3).*m1.*Mf);

f201 = (-(fd200.*m1.*Mf) + 2.*f200.*m1.*Mf.*PD(1, 1).*PI(1, 1) + 2.*f200.*m1.*Mf.*PD(2, 1).*PI(1, 2) + 2.*f200.*m1.*Mf.*PD(3, 1).*PI(1, 3) + 12.*f200.*gamma.*m1.*xi0.*xi1.*P(1, 1).*PI(1, 4) + ...
     12.*f200.*gamma.*Mf.*xi0.*xi1.*P(1, 1).*PI(1, 4) + 3.*f101.*gamma.*m1.*xi0.*P(1, 1).^2.*PI(1, 4) + 3.*f101.*gamma.*Mf.*xi0.*P(1, 1).^2.*PI(1, 4) + 2.*f200.*m1.*Mf.*PD(4, 1).*PI(1, 4) - ...
     12.*f200.*gamma.*Mf.*xi0.*xi1.*P(1, 1).*PI(1, 5) - 3.*f101.*gamma.*Mf.*xi0.*P(1, 1).^2.*PI(1, 5) + 2.*f200.*m1.*Mf.*PD(5, 1).*PI(1, 5) + 2.*f200.*m1.*Mf.*PD(6, 1).*PI(1, 6) + ...
     f110.*m1.*Mf.*PD(1, 1).*PI(2, 1) + f110.*m1.*Mf.*PD(2, 1).*PI(2, 2) + f110.*m1.*Mf.*PD(3, 1).*PI(2, 3) + 6.*f110.*gamma.*m1.*xi0.*xi1.*P(1, 1).*PI(2, 4) + ...
     6.*f110.*gamma.*Mf.*xi0.*xi1.*P(1, 1).*PI(2, 4) + 3.*f011.*gamma.*m1.*xi0.*P(1, 1).^2.*PI(2, 4) + 3.*f011.*gamma.*Mf.*xi0.*P(1, 1).^2.*PI(2, 4) + f110.*m1.*Mf.*PD(4, 1).*PI(2, 4) - ...
     6.*f110.*gamma.*Mf.*xi0.*xi1.*P(1, 1).*PI(2, 5) - 3.*f011.*gamma.*Mf.*xi0.*P(1, 1).^2.*PI(2, 5) + f110.*m1.*Mf.*PD(5, 1).*PI(2, 5) + f110.*m1.*Mf.*PD(6, 1).*PI(2, 6) - ...
     h200.*m1.*Mf.*PD(1, 3).*PI(5, 1) - hc200.*m1.*Mf.*PD(1, 4).*PI(5, 1) - f200.*m1.*Mf.*PD(1, 5).*PI(5, 1) - fc200.*m1.*Mf.*PD(1, 6).*PI(5, 1) - h200.*m1.*Mf.*PD(2, 3).*PI(5, 2) - ...
     hc200.*m1.*Mf.*PD(2, 4).*PI(5, 2) - f200.*m1.*Mf.*PD(2, 5).*PI(5, 2) - fc200.*m1.*Mf.*PD(2, 6).*PI(5, 2) - h200.*m1.*Mf.*PD(3, 3).*PI(5, 3) - hc200.*m1.*Mf.*PD(3, 4).*PI(5, 3) - ...
     f200.*m1.*Mf.*PD(3, 5).*PI(5, 3) - fc200.*m1.*Mf.*PD(3, 6).*PI(5, 3) - 3.*gamma.*m1.*xi1.*P(1, 1).^2.*PI(5, 4) - 3.*gamma.*Mf.*xi1.*P(1, 1).^2.*PI(5, 4) - ...
     6.*gamma.*h200.*m1.*xi0.*xi1.*P(1, 3).*PI(5, 4) - 6.*gamma.*h200.*Mf.*xi0.*xi1.*P(1, 3).*PI(5, 4) - 6.*gamma.*h101.*m1.*xi0.*P(1, 1).*P(1, 3).*PI(5, 4) - ...
     6.*gamma.*h101.*Mf.*xi0.*P(1, 1).*P(1, 3).*PI(5, 4) - 6.*gamma.*hc200.*m1.*xi0.*xi1.*P(1, 4).*PI(5, 4) - 6.*gamma.*hc200.*Mf.*xi0.*xi1.*P(1, 4).*PI(5, 4) - ...
     6.*gamma.*hc101.*m1.*xi0.*P(1, 1).*P(1, 4).*PI(5, 4) - 6.*gamma.*hc101.*Mf.*xi0.*P(1, 1).*P(1, 4).*PI(5, 4) - 6.*f200.*gamma.*m1.*xi0.*xi1.*P(1, 5).*PI(5, 4) - ...
     6.*f200.*gamma.*Mf.*xi0.*xi1.*P(1, 5).*PI(5, 4) - 6.*f101.*gamma.*m1.*xi0.*P(1, 1).*P(1, 5).*PI(5, 4) - 6.*f101.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 5).*PI(5, 4) - ...
     6.*fc200.*gamma.*m1.*xi0.*xi1.*P(1, 6).*PI(5, 4) - 6.*fc200.*gamma.*Mf.*xi0.*xi1.*P(1, 6).*PI(5, 4) - 6.*fc101.*gamma.*m1.*xi0.*P(1, 1).*P(1, 6).*PI(5, 4) - ...
     6.*fc101.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 6).*PI(5, 4) - h200.*m1.*Mf.*PD(4, 3).*PI(5, 4) - hc200.*m1.*Mf.*PD(4, 4).*PI(5, 4) - f200.*m1.*Mf.*PD(4, 5).*PI(5, 4) - fc200.*m1.*Mf.*PD(4, 6).*PI(5, 4) + ...
     3.*gamma.*Mf.*xi1.*P(1, 1).^2.*PI(5, 5) + 6.*gamma.*h200.*Mf.*xi0.*xi1.*P(1, 3).*PI(5, 5) + 6.*gamma.*h101.*Mf.*xi0.*P(1, 1).*P(1, 3).*PI(5, 5) + 6.*gamma.*hc200.*Mf.*xi0.*xi1.*P(1, 4).*PI(5, 5) + ...
     6.*gamma.*hc101.*Mf.*xi0.*P(1, 1).*P(1, 4).*PI(5, 5) + 6.*f200.*gamma.*Mf.*xi0.*xi1.*P(1, 5).*PI(5, 5) + 6.*f101.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 5).*PI(5, 5) + ...
     6.*fc200.*gamma.*Mf.*xi0.*xi1.*P(1, 6).*PI(5, 5) + 6.*fc101.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 6).*PI(5, 5) - h200.*m1.*Mf.*PD(5, 3).*PI(5, 5) - hc200.*m1.*Mf.*PD(5, 4).*PI(5, 5) - ...
     f200.*m1.*Mf.*PD(5, 5).*PI(5, 5) - fc200.*m1.*Mf.*PD(5, 6).*PI(5, 5) - h200.*m1.*Mf.*PD(6, 3).*PI(5, 6) - hc200.*m1.*Mf.*PD(6, 4).*PI(5, 6) - f200.*m1.*Mf.*PD(6, 5).*PI(5, 6) - ...
     fc200.*m1.*Mf.*PD(6, 6).*PI(5, 6))./((2.*l1 - l3).*m1.*Mf);


f021 = (-(fd020.*m1.*Mf) + f110.*m1.*Mf.*PD(1, 2).*PI(1, 1) + f110.*m1.*Mf.*PD(2, 2).*PI(1, 2) + f110.*m1.*Mf.*PD(3, 2).*PI(1, 3) + 6.*f110.*gamma.*m1.*xi0.*xi1.*P(1, 2).*PI(1, 4) + ...
     6.*f110.*gamma.*Mf.*xi0.*xi1.*P(1, 2).*PI(1, 4) + 3.*f101.*gamma.*m1.*xi0.*P(1, 2).^2.*PI(1, 4) + 3.*f101.*gamma.*Mf.*xi0.*P(1, 2).^2.*PI(1, 4) + f110.*m1.*Mf.*PD(4, 2).*PI(1, 4) - ...
     6.*f110.*gamma.*Mf.*xi0.*xi1.*P(1, 2).*PI(1, 5) - 3.*f101.*gamma.*Mf.*xi0.*P(1, 2).^2.*PI(1, 5) + f110.*m1.*Mf.*PD(5, 2).*PI(1, 5) + f110.*m1.*Mf.*PD(6, 2).*PI(1, 6) + ...
     2.*f020.*m1.*Mf.*PD(1, 2).*PI(2, 1) + 2.*f020.*m1.*Mf.*PD(2, 2).*PI(2, 2) + 2.*f020.*m1.*Mf.*PD(3, 2).*PI(2, 3) + 12.*f020.*gamma.*m1.*xi0.*xi1.*P(1, 2).*PI(2, 4) + ...
     12.*f020.*gamma.*Mf.*xi0.*xi1.*P(1, 2).*PI(2, 4) + 3.*f011.*gamma.*m1.*xi0.*P(1, 2).^2.*PI(2, 4) + 3.*f011.*gamma.*Mf.*xi0.*P(1, 2).^2.*PI(2, 4) + 2.*f020.*m1.*Mf.*PD(4, 2).*PI(2, 4) - ...
     12.*f020.*gamma.*Mf.*xi0.*xi1.*P(1, 2).*PI(2, 5) - 3.*f011.*gamma.*Mf.*xi0.*P(1, 2).^2.*PI(2, 5) + 2.*f020.*m1.*Mf.*PD(5, 2).*PI(2, 5) + 2.*f020.*m1.*Mf.*PD(6, 2).*PI(2, 6) - ...
     h020.*m1.*Mf.*PD(1, 3).*PI(5, 1) - hc020.*m1.*Mf.*PD(1, 4).*PI(5, 1) - f020.*m1.*Mf.*PD(1, 5).*PI(5, 1) - fc020.*m1.*Mf.*PD(1, 6).*PI(5, 1) - h020.*m1.*Mf.*PD(2, 3).*PI(5, 2) - ...
     hc020.*m1.*Mf.*PD(2, 4).*PI(5, 2) - f020.*m1.*Mf.*PD(2, 5).*PI(5, 2) - fc020.*m1.*Mf.*PD(2, 6).*PI(5, 2) - h020.*m1.*Mf.*PD(3, 3).*PI(5, 3) - hc020.*m1.*Mf.*PD(3, 4).*PI(5, 3) - ...
     f020.*m1.*Mf.*PD(3, 5).*PI(5, 3) - fc020.*m1.*Mf.*PD(3, 6).*PI(5, 3) - 3.*gamma.*m1.*xi1.*P(1, 2).^2.*PI(5, 4) - 3.*gamma.*Mf.*xi1.*P(1, 2).^2.*PI(5, 4) - ...
     6.*gamma.*h020.*m1.*xi0.*xi1.*P(1, 3).*PI(5, 4) - 6.*gamma.*h020.*Mf.*xi0.*xi1.*P(1, 3).*PI(5, 4) - 6.*gamma.*h011.*m1.*xi0.*P(1, 2).*P(1, 3).*PI(5, 4) - ...
     6.*gamma.*h011.*Mf.*xi0.*P(1, 2).*P(1, 3).*PI(5, 4) - 6.*gamma.*hc020.*m1.*xi0.*xi1.*P(1, 4).*PI(5, 4) - 6.*gamma.*hc020.*Mf.*xi0.*xi1.*P(1, 4).*PI(5, 4) - ...
     6.*gamma.*hc011.*m1.*xi0.*P(1, 2).*P(1, 4).*PI(5, 4) - 6.*gamma.*hc011.*Mf.*xi0.*P(1, 2).*P(1, 4).*PI(5, 4) - 6.*f020.*gamma.*m1.*xi0.*xi1.*P(1, 5).*PI(5, 4) - ...
     6.*f020.*gamma.*Mf.*xi0.*xi1.*P(1, 5).*PI(5, 4) - 6.*f011.*gamma.*m1.*xi0.*P(1, 2).*P(1, 5).*PI(5, 4) - 6.*f011.*gamma.*Mf.*xi0.*P(1, 2).*P(1, 5).*PI(5, 4) - ...
     6.*fc020.*gamma.*m1.*xi0.*xi1.*P(1, 6).*PI(5, 4) - 6.*fc020.*gamma.*Mf.*xi0.*xi1.*P(1, 6).*PI(5, 4) - 6.*fc011.*gamma.*m1.*xi0.*P(1, 2).*P(1, 6).*PI(5, 4) - ...
     6.*fc011.*gamma.*Mf.*xi0.*P(1, 2).*P(1, 6).*PI(5, 4) - h020.*m1.*Mf.*PD(4, 3).*PI(5, 4) - hc020.*m1.*Mf.*PD(4, 4).*PI(5, 4) - f020.*m1.*Mf.*PD(4, 5).*PI(5, 4) - fc020.*m1.*Mf.*PD(4, 6).*PI(5, 4) + ...
     3.*gamma.*Mf.*xi1.*P(1, 2).^2.*PI(5, 5) + 6.*gamma.*h020.*Mf.*xi0.*xi1.*P(1, 3).*PI(5, 5) + 6.*gamma.*h011.*Mf.*xi0.*P(1, 2).*P(1, 3).*PI(5, 5) + 6.*gamma.*hc020.*Mf.*xi0.*xi1.*P(1, 4).*PI(5, 5) + ...
     6.*gamma.*hc011.*Mf.*xi0.*P(1, 2).*P(1, 4).*PI(5, 5) + 6.*f020.*gamma.*Mf.*xi0.*xi1.*P(1, 5).*PI(5, 5) + 6.*f011.*gamma.*Mf.*xi0.*P(1, 2).*P(1, 5).*PI(5, 5) + ...
     6.*fc020.*gamma.*Mf.*xi0.*xi1.*P(1, 6).*PI(5, 5) + 6.*fc011.*gamma.*Mf.*xi0.*P(1, 2).*P(1, 6).*PI(5, 5) - h020.*m1.*Mf.*PD(5, 3).*PI(5, 5) - hc020.*m1.*Mf.*PD(5, 4).*PI(5, 5) - ...
     f020.*m1.*Mf.*PD(5, 5).*PI(5, 5) - fc020.*m1.*Mf.*PD(5, 6).*PI(5, 5) - h020.*m1.*Mf.*PD(6, 3).*PI(5, 6) - hc020.*m1.*Mf.*PD(6, 4).*PI(5, 6) - f020.*m1.*Mf.*PD(6, 5).*PI(5, 6) - ...
     fc020.*m1.*Mf.*PD(6, 6).*PI(5, 6))./((2.*l1c - l3).*m1.*Mf);

f111 = (-(fd110.*m1.*Mf) + f110.*m1.*Mf.*PD(1, 1).*PI(1, 1) + 2.*f200.*m1.*Mf.*PD(1, 2).*PI(1, 1) + f110.*m1.*Mf.*PD(2, 1).*PI(1, 2) + 2.*f200.*m1.*Mf.*PD(2, 2).*PI(1, 2) + ...
     f110.*m1.*Mf.*PD(3, 1).*PI(1, 3) + 2.*f200.*m1.*Mf.*PD(3, 2).*PI(1, 3) + 6.*f110.*gamma.*m1.*xi0.*xi1.*P(1, 1).*PI(1, 4) + 6.*f110.*gamma.*Mf.*xi0.*xi1.*P(1, 1).*PI(1, 4) + ...
     12.*f200.*gamma.*m1.*xi0.*xi1.*P(1, 2).*PI(1, 4) + 12.*f200.*gamma.*Mf.*xi0.*xi1.*P(1, 2).*PI(1, 4) + 6.*f101.*gamma.*m1.*xi0.*P(1, 1).*P(1, 2).*PI(1, 4) + ...
     6.*f101.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 2).*PI(1, 4) + f110.*m1.*Mf.*PD(4, 1).*PI(1, 4) + 2.*f200.*m1.*Mf.*PD(4, 2).*PI(1, 4) - 6.*f110.*gamma.*Mf.*xi0.*xi1.*P(1, 1).*PI(1, 5) - ...
     12.*f200.*gamma.*Mf.*xi0.*xi1.*P(1, 2).*PI(1, 5) - 6.*f101.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 2).*PI(1, 5) + f110.*m1.*Mf.*PD(5, 1).*PI(1, 5) + 2.*f200.*m1.*Mf.*PD(5, 2).*PI(1, 5) + ...
     f110.*m1.*Mf.*PD(6, 1).*PI(1, 6) + 2.*f200.*m1.*Mf.*PD(6, 2).*PI(1, 6) + 2.*f020.*m1.*Mf.*PD(1, 1).*PI(2, 1) + f110.*m1.*Mf.*PD(1, 2).*PI(2, 1) + 2.*f020.*m1.*Mf.*PD(2, 1).*PI(2, 2) + ...
     f110.*m1.*Mf.*PD(2, 2).*PI(2, 2) + 2.*f020.*m1.*Mf.*PD(3, 1).*PI(2, 3) + f110.*m1.*Mf.*PD(3, 2).*PI(2, 3) + 12.*f020.*gamma.*m1.*xi0.*xi1.*P(1, 1).*PI(2, 4) + ...
     12.*f020.*gamma.*Mf.*xi0.*xi1.*P(1, 1).*PI(2, 4) + 6.*f110.*gamma.*m1.*xi0.*xi1.*P(1, 2).*PI(2, 4) + 6.*f110.*gamma.*Mf.*xi0.*xi1.*P(1, 2).*PI(2, 4) + ...
     6.*f011.*gamma.*m1.*xi0.*P(1, 1).*P(1, 2).*PI(2, 4) + 6.*f011.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 2).*PI(2, 4) + 2.*f020.*m1.*Mf.*PD(4, 1).*PI(2, 4) + f110.*m1.*Mf.*PD(4, 2).*PI(2, 4) - ...
     12.*f020.*gamma.*Mf.*xi0.*xi1.*P(1, 1).*PI(2, 5) - 6.*f110.*gamma.*Mf.*xi0.*xi1.*P(1, 2).*PI(2, 5) - 6.*f011.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 2).*PI(2, 5) + 2.*f020.*m1.*Mf.*PD(5, 1).*PI(2, 5) + ...
     f110.*m1.*Mf.*PD(5, 2).*PI(2, 5) + 2.*f020.*m1.*Mf.*PD(6, 1).*PI(2, 6) + f110.*m1.*Mf.*PD(6, 2).*PI(2, 6) - h110.*m1.*Mf.*PD(1, 3).*PI(5, 1) - hc110.*m1.*Mf.*PD(1, 4).*PI(5, 1) - ...
     f110.*m1.*Mf.*PD(1, 5).*PI(5, 1) - fc110.*m1.*Mf.*PD(1, 6).*PI(5, 1) - h110.*m1.*Mf.*PD(2, 3).*PI(5, 2) - hc110.*m1.*Mf.*PD(2, 4).*PI(5, 2) - f110.*m1.*Mf.*PD(2, 5).*PI(5, 2) - ...
     fc110.*m1.*Mf.*PD(2, 6).*PI(5, 2) - h110.*m1.*Mf.*PD(3, 3).*PI(5, 3) - hc110.*m1.*Mf.*PD(3, 4).*PI(5, 3) - f110.*m1.*Mf.*PD(3, 5).*PI(5, 3) - fc110.*m1.*Mf.*PD(3, 6).*PI(5, 3) - ...
     6.*gamma.*m1.*xi1.*P(1, 1).*P(1, 2).*PI(5, 4) - 6.*gamma.*Mf.*xi1.*P(1, 1).*P(1, 2).*PI(5, 4) - 6.*gamma.*h110.*m1.*xi0.*xi1.*P(1, 3).*PI(5, 4) - 6.*gamma.*h110.*Mf.*xi0.*xi1.*P(1, 3).*PI(5, 4) - ...
     6.*gamma.*h011.*m1.*xi0.*P(1, 1).*P(1, 3).*PI(5, 4) - 6.*gamma.*h011.*Mf.*xi0.*P(1, 1).*P(1, 3).*PI(5, 4) - 6.*gamma.*h101.*m1.*xi0.*P(1, 2).*P(1, 3).*PI(5, 4) - ...
     6.*gamma.*h101.*Mf.*xi0.*P(1, 2).*P(1, 3).*PI(5, 4) - 6.*gamma.*hc110.*m1.*xi0.*xi1.*P(1, 4).*PI(5, 4) - 6.*gamma.*hc110.*Mf.*xi0.*xi1.*P(1, 4).*PI(5, 4) - ...
     6.*gamma.*hc011.*m1.*xi0.*P(1, 1).*P(1, 4).*PI(5, 4) - 6.*gamma.*hc011.*Mf.*xi0.*P(1, 1).*P(1, 4).*PI(5, 4) - 6.*gamma.*hc101.*m1.*xi0.*P(1, 2).*P(1, 4).*PI(5, 4) - ...
     6.*gamma.*hc101.*Mf.*xi0.*P(1, 2).*P(1, 4).*PI(5, 4) - 6.*f110.*gamma.*m1.*xi0.*xi1.*P(1, 5).*PI(5, 4) - 6.*f110.*gamma.*Mf.*xi0.*xi1.*P(1, 5).*PI(5, 4) - ...
     6.*f011.*gamma.*m1.*xi0.*P(1, 1).*P(1, 5).*PI(5, 4) - 6.*f011.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 5).*PI(5, 4) - 6.*f101.*gamma.*m1.*xi0.*P(1, 2).*P(1, 5).*PI(5, 4) - ...
     6.*f101.*gamma.*Mf.*xi0.*P(1, 2).*P(1, 5).*PI(5, 4) - 6.*fc110.*gamma.*m1.*xi0.*xi1.*P(1, 6).*PI(5, 4) - 6.*fc110.*gamma.*Mf.*xi0.*xi1.*P(1, 6).*PI(5, 4) - ...
     6.*fc011.*gamma.*m1.*xi0.*P(1, 1).*P(1, 6).*PI(5, 4) - 6.*fc011.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 6).*PI(5, 4) - 6.*fc101.*gamma.*m1.*xi0.*P(1, 2).*P(1, 6).*PI(5, 4) - ...
     6.*fc101.*gamma.*Mf.*xi0.*P(1, 2).*P(1, 6).*PI(5, 4) - h110.*m1.*Mf.*PD(4, 3).*PI(5, 4) - hc110.*m1.*Mf.*PD(4, 4).*PI(5, 4) - f110.*m1.*Mf.*PD(4, 5).*PI(5, 4) - fc110.*m1.*Mf.*PD(4, 6).*PI(5, 4) + ...
     6.*gamma.*Mf.*xi1.*P(1, 1).*P(1, 2).*PI(5, 5) + 6.*gamma.*h110.*Mf.*xi0.*xi1.*P(1, 3).*PI(5, 5) + 6.*gamma.*h011.*Mf.*xi0.*P(1, 1).*P(1, 3).*PI(5, 5) + ...
     6.*gamma.*h101.*Mf.*xi0.*P(1, 2).*P(1, 3).*PI(5, 5) + 6.*gamma.*hc110.*Mf.*xi0.*xi1.*P(1, 4).*PI(5, 5) + 6.*gamma.*hc011.*Mf.*xi0.*P(1, 1).*P(1, 4).*PI(5, 5) + ...
     6.*gamma.*hc101.*Mf.*xi0.*P(1, 2).*P(1, 4).*PI(5, 5) + 6.*f110.*gamma.*Mf.*xi0.*xi1.*P(1, 5).*PI(5, 5) + 6.*f011.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 5).*PI(5, 5) + ...
     6.*f101.*gamma.*Mf.*xi0.*P(1, 2).*P(1, 5).*PI(5, 5) + 6.*fc110.*gamma.*Mf.*xi0.*xi1.*P(1, 6).*PI(5, 5) + 6.*fc011.*gamma.*Mf.*xi0.*P(1, 1).*P(1, 6).*PI(5, 5) + ...
     6.*fc101.*gamma.*Mf.*xi0.*P(1, 2).*P(1, 6).*PI(5, 5) - h110.*m1.*Mf.*PD(5, 3).*PI(5, 5) - hc110.*m1.*Mf.*PD(5, 4).*PI(5, 5) - f110.*m1.*Mf.*PD(5, 5).*PI(5, 5) - fc110.*m1.*Mf.*PD(5, 6).*PI(5, 5) - ...
     h110.*m1.*Mf.*PD(6, 3).*PI(5, 6) - hc110.*m1.*Mf.*PD(6, 4).*PI(5, 6) - f110.*m1.*Mf.*PD(6, 5).*PI(5, 6) - fc110.*m1.*Mf.*PD(6, 6).*PI(5, 6))./((l1 + l1c - l3).*m1.*Mf);







%     h012 = 1/(l1c - l2)* (- hd011  + 7.5*  gamma *   h101*   xi01*   xi11*  P(1, 2) *PI(1,4) - ...
%     6*  gamma*  h101* xi01*   xi11*  P(1,2)* PI(1,5) + ...
%     7.5*  gamma*  h011 *xi01 *xi11*P(1,2)*PI(2,4) - ...
%     6*  gamma*  h011* xi01*  xi11 * P(1,2)*PI(2,5) - ...
%     3.75*gamma*xi11^2*P(1,2)*PI(3,4) - ...
%     7.5*gamma*xi01*xi21*P(1,2)*PI(3,4) - ...
%     7.5*gamma*h011*xi01*xi11*P(1,3)*PI(3,4) -... 
%     7.5*gamma*hc011* xi01*  xi11*  P(1, 4)* PI(3, 4) -... 
%     7.5 * gamma  * f011 *xi01 * xi11 *P(1,5)* PI(3,4) - ...
%     7.5 * gamma * fc011* xi01*  xi11*  P(1,6)*PI(3,4) + ...
%     3*gamma*xi11^2*P(1,2)*PI(3,5) + ...
%     6*gamma*xi01*xi21*P(1,2)*PI(3,5) + ...
%     6*gamma*h011*xi01*xi11*P(1,3)*PI(3,5) + ...
%     6*gamma*hc011*xi01* xi11*  P(1,4) *PI(3,5) + ...
%     6*  gamma * f011 *xi01 * xi11 * P(1,5)* PI(3,5) + ...
%     6*  gamma*  fc011* xi01*  xi11*  P(1,6)*PI(3,5));
% 
%   h102 = 1/(l1 -l2)* (- hd101+ ...
%     7.5 * gamma*  h101 *xi01 * xi11*  P(1,1)* PI(1,4) - ...
%     6 *gamma*h101*xi01*xi11*P(1,1)*PI(1,5) + ...
%     7.5*gamma*h011* xi01 *  xi11 *  P(1,1)*PI(2, 4) - ...
%     6*gamma*h011*xi01*xi11*P(1,1)*PI(2,5) - ...
%     3.75 * gamma*  xi11^2* P(1,1)*PI(3,4) - ...
%     7.5 * gamma * xi01*xi21*P(1,1)*PI(3,4) - ...
%     7.5 * gamma*  h101 *xi01 * xi11*  P(1,3)* PI(3,4) - ...
%     7.5 * gamma * hc101*xi01*xi11*P(1,4) *PI(3,4) - ...
%     7.5 * gamma * f101 * xi01 *  xi11 *  P(1,5)*PI(3,4) - ...
%     7.5 * gamma * fc101* xi01 * xi11 *P(1,6) *PI(3,4) + ...
%     3*  gamma  *xi11^2 *P(1,1)* PI(3,5) + ...
%     6*  gamma  *xi01  *xi21 *P(1,1) *PI(3,5) + ...
%     6*  gamma  *h101 *xi01  *xi11 * P(1,3)* PI(3,5) + ...
%     6*  gamma  *hc101 *xi01  *xi11  *P(1,4)* PI(3,5) + ...
%     6*  gamma * f101 *xi01  *xi11  *P(1,5) *PI(3,5) + ...
%     6*  gamma*  fc101 *xi01*  xi11 * P(1,6)*PI(3,5));
% 
%   h201 =  1/(2*l1 - l2)*(- hd200  + ...
%     15*gamma*h200*xi01*xi11*P(1,1)*PI(1,4) + ...
%     3.75*gamma*h101*xi01*P(1,1)^2*PI(1,4) - ...
%     12*gamma*h200*xi01*xi11*P(1,1)*PI(1,5) - ...
%     3*gamma * h101 * xi01*P(1,1)^2*PI(1,5) + ...
%     7.5 * gamma*h110*xi01*xi11*P(1,1)*PI(2,4) + ...
%     3.75 * gamma* h011* xi01 * P(1,1)^2*PI(2,4) - ...
%     6*gamma*h110*xi01*xi11*P(1,1)*PI(2,5) - ...
%     3*gamma * h011 *xi01 * P(1,1)^2 *PI(2,5) - ...
%     3.75  *gamma  *xi11  *P(1,1)^2 *PI(3,4) - ...
%     7.5  *gamma*  h200*  xi01 *  xi11 *  P(1,3) *PI(3,4) - ...
%     7.5 *gamma* h101*xi01*P(1,1)*P(1,3)*PI(3,4) - ...
%     7.5  *gamma *  hc200 * xi01 *  xi11 *  P(1,4) * PI(3,4) - ...
%     7.5 * gamma * hc101*xi01*P(1,1)*P(1,4)*PI(3,4)- 7.5* gamma * f200* xi01 * xi11*  P(1,5) *PI(3,4) - ...
%     7.5 * gamma  * f101 * xi01 * P(1,1)* P(1,5)*PI(3,4) - 7.5* gamma  *fc200 * xi01 *  xi11 *  P(1,6)*PI(3,4) - ...
%     7.5 * gamma * fc101 *xi01 *P(1,1)*P(1,6)*PI(3,4) + 3*  gamma*  xi11 * P(1,1)^2 *PI(3,5) + ...
%     6*  gamma *  h200 *  xi01 *  xi11 *  P(1,3) *PI(3,5) + ...
%     6* gamma * h101 *xi01 *P(1,1)*P(1,3)*PI(3,5) + ...
%     6*  gamma * hc200* xi01*xi11*P(1,4)*PI(3,5) + ...
%     6*  gamma *  hc101*xi01* P(1,1)* P(1,4)* PI(3,5) + 6*  gamma *  f200 *xi01*  xi11 * P(1,5) *PI(3,5) + ...
%     6*  gamma * f101*xi01* P(1, 1)* P(1,5)* PI(3,5) + ...
%     6*  gamma  *fc200*xi01  *xi11 * P(1,6) *PI(3,5) + ...
%     6*  gamma * fc101 *xi01* P(1,1)* P(1,6)*PI(3,5));
% 
%  h021= 1/(2*l1c-l2)*(- hd020 + ...
% 7.5* gamma * h110 *  xi01*  xi11 *  P(1,2)*PI(1,4) + ...
%     3.75*gamma*h101*xi01*P(1,2)^2*PI(1,4) - ...
%     6* gamma *  h110 *   xi01 *  xi11 *  P(1,2)*PI(1,5) - ...
%     3*gamma*h101*xi01*P(1,2)^2*PI(1,5) + ...
%     15*  gamma*  h020* xi01*  xi11*  P(1,2) *PI(2,4) + ...
%     3.75  *gamma  *h011 *xi01 *P(1,2)^2*PI(2,4) - ...
%     12*  gamma*  h020* xi01*  xi11*  P(1,2)*PI(2,5) - ...
%     3* gamma *h011*xi01*P(1,2)^2*PI(2,5) - ...
%     3.75*  gamma *  xi11 *  P(1, 2)^2 * PI(3, 4) - ...
%     7.5 * gamma * h020*xi01*xi11*P(1,3)*PI(3,4) - ...
%     7.5 * gamma *  h011* xi01* P(1,2)* P(1,3)*PI(3,4) - 7.5 *  gamma*  hc020* xi01*  xi11*  P(1,4)* PI(3,4) - ...
%     7.5*  gamma*  hc011* xi01* P(1,2) *P(1,4)* PI(3,4) - 7.5 * gamma*  f020* xi01 *  xi11 *  P(1,5)* PI(3,4) - ...
%     7.5*gamma*f011*xi01*P(1,2)*P(1,5)*PI(3,4) - 7.5*gamma* fc020 * xi01 *  xi11*  P(1,6)* PI(3,4) - ...
%     7.5*  gamma*  fc011* xi01* P(1,2)* P(1,6)* PI(3,4) + 3*  gamma *  xi11 *  P(1,2)^2 *PI(3,5) + ...
% 6*  gamma*  h020 *xi01 * xi11*  P(1,3)*PI(3,5) + ...
%     6*  gamma*  h011* xi01* P(1,2)* P(1,3)* PI(3,5) + 6*  gamma *  hc020 *xi01*  xi11 *  P(1,4)* PI(3,5) + ...
%     6*  gamma *  hc011 * xi01 * P(1,2)* P(1,4)*PI(3,5) + 6* gamma*  f020 *xi01 * xi11 * P(1,5)* PI(3,5) + ...
%     6*  gamma *  f011 * xi01 * P(1,2)* P(1,5)*PI(3,5) + ...
%     6*  gamma * fc020 *xi01  *xi11  *P(1,6) *PI(3,5) + ...
%     6*  gamma * fc011 * xi01 *P(1,2)* P(1,6)* PI(3,5));
% 
% h111 = 1/(l1+l1c-l2)*(- hd110 + ...
%     7.5* gamma *  h110 *   xi01 *  xi11*  P(1,1)* PI(1,4) + ...
%     15 *  gamma * h200 * xi01 * xi11 *P(1,2) *PI(1,4) + ...
%     7.5 * gamma *  h101 *  xi01 * P(1,1)* P(1,2)*PI(1,4) - ...
%     6 *  gamma * h110  * xi01 * xi11 * P(1,1)* PI(1,5) - ...
%     12 *  gamma *  h200 *  xi01 *  xi11 *  P(1,2)* PI(1,5) - ...
%     6*  gamma *  h101  * xi01 *P(1,1) *P(1,2) *PI(1,5) + ...
%     15*  gamma * h020 *xi01 *  xi11 * P(1,1)*PI(2,4) + ...
%     7.5 * gamma * h110 *  xi01 * xi11 * P(1,2)* PI(2,4) + ...
%     7.5 * gamma *  h011 * xi01 * P(1,1) *P(1,2)* PI(2,4) - 12*  gamma*  h020* xi01*  xi11 * P(1, 1)*PI(2,5) - ...
%     6*  gamma * h110 *  xi01 * xi11 * P(1,2)* PI(2,5) - ...
%     6*  gamma * h011 *xi01* P(1,1)* P(1,2)* PI(2,5) - ...
%     7.5*  gamma *  xi11 *  P(1,1) *P(1,2) *PI(3,4) - ...
% 7.5 * gamma * h110  * xi01 * xi11 *P(1,3)*PI(3,4) - ...
%     7.5 *  gamma * h011 * xi01 * P(1,1)* P(1,3)* PI(3,4) - 7.5*  gamma *  h101*   xi01 *P(1,2)*P(1,3)*PI(3,4) - ...
%     7.5 * gamma * hc110 * xi01 * xi11 * P(1,4)* PI(3,4) - ...
%     7.5 * gamma * hc011*xi01* P(1,1)* P(1,4)* PI(3,4) - 7.5*  gamma*  hc101*xi01* P(1,2) *P(1,4)* PI(3,4) - ...
%     7.5 *  gamma * f110* xi01 * xi11 * P(1,5) *PI(3,4) - ...
%     7.5 * gamma * f011 * xi01 * P(1,1)*P(1,5)*PI(3,4) - 7.5 * gamma*  f101 *xi01* P(1, 2) *P(1, 5) *PI(3, 4) - ...
%     7.5 * gamma * fc110* xi01 * xi11 * P(1,6)*PI(3,4) - ...
%     7.5 * gamma * fc011* xi01* P(1,1)*P(1,6)*PI(3,4) - 7.5 * gamma * fc101 *xi01 *P(1,2)* P(1,6)* PI(3,4) + ...
%     6*  gamma * xi11 * P(1,1)* P(1,2)* PI(3,5) + ...
%     6*  gamma*  h110 *  xi01 * xi11*  P(1,3)* PI(3,5) + ...
%     6*  gamma*  h011* xi01* P(1,1)* P(1,3)* PI(3,5) + ...
%     6*  gamma *  h101  * xi01 *P(1,2)* P(1,3) *PI(3,5) + ...
%     6*  gamma * hc110 *xi01  *xi11 * P(1,4)* PI(3,5) + ...
%     6*  gamma * hc011* xi01 *P(1,1)*P(1,4) *PI(3, 5) + 6*  gamma*  hc101*xi01* P(1,2)* P(1,4)* PI(3,5) + ...
%     6*  gamma * f110* xi01 * xi11 * P(1,5)* PI(3,5) + ...
%     6*  gamma * f011 *xi01 *P(1,1)*P(1,5)*PI(3,5) + ...
%     6*  gamma * f101*xi01 *P(1,2)*P(1,5)*PI(3,5) + ...
%     6*  gamma * fc110* xi01 * xi11 * P(1,6)*PI(3,5) + ...
%     6*  gamma * fc011* xi01* P(1,1)*P(1,6)*PI(3,5) + 6*  gamma*  fc101* xi01* P(1,2)*P(1,6)*PI(3,5));
% 
% 
% f012 = 1/(l1c - l3)*(- fd011 + ...
%   7.5  *gamma  *f101  *xi01  *xi11    *P(1,2)   *PI(1,4) - ...
%     6  *gamma  *f101  *xi01  *xi11    *P(1,2)   *PI(1,5) + ...
%     7.5  *gamma  *f011 *xi01 *xi11    *P(1,2)   *PI(2,4) - ...
%     6  *gamma  *f011 *xi01 *xi11    *P(1,2)   *PI(2, 5) - ...
%     3.75  *gamma *xi11^2   *P(1,2)   *PI(5, 4) - ...
%     7.5  *gamma  *xi01  *xi21 *P(1,2)   *PI(5,4) - ...
%     7.5  *gamma  *h011 *xi01 *xi11    *P(1,3)   *PI(5, 4) - ...
%     7.5  *gamma  *hc011 *xi01 *xi11    *P(1,4)   *PI(5,4) - ...
%     7.5  *gamma  *f011 *xi01 *xi11    *P(1,5)   *PI(5,4) - ...
%     7.5  *gamma  *fc011 *xi01 *xi11    *P(1,6)   *PI(5,4) + ...
%     3  *gamma *xi11^2   *P(1,2)   *PI(5,5) + ...
%     6  *gamma  *xi01  *xi21 *P(1,2)   *PI(5,5) + ...
%     6  *gamma  *h011 *xi01 *xi11    *P(1,3)   *PI(5,5) + ...
%     6  *gamma  *hc011 *xi01 *xi11    *P(1., 4.)   *PI(5,5) + ...
%     6  *gamma  *f011 *xi01 *xi11    *P(1,5)   *PI(5,5) + ...
%     6  *gamma  *fc011 *xi01 *xi11    *P(1,6)   *PI(5,5));
% 
% 
% 
% f102 =  1/(l1 -l3)*(- fd101  + ...
%     7.5  *gamma  *f101  *xi01 *xi11    *P(1,1)   *PI(1,4) - ...
%     6  *gamma  *f101  *xi01 *xi11    *P(1,1)   *PI(1,5) + ...
%     7.5  *gamma  *f011 *xi01 *xi11    *P(1,1)   *PI(2, 4) - ...
%     6  *gamma  *f011 *xi01 *xi11    *P(1,1)   *PI(2,5) - ...
%     3.75  *gamma *xi11^2   *P(1,1)   *PI(5,4) - ...
%     7.5  *gamma  *xi01  *xi21 *P(1,1)   *PI(5,4) - ...
%     7.5  *gamma  *h101 *xi01 *xi11    *P(1,3)   *PI(5,4) - ...
%     7.5  *gamma  *hc101 *xi01 *xi11    *P(1,4)   *PI(5,4) - ...
%     7.5  *gamma  *f101  *xi01 *xi11    *P(1,5)   *PI(5,4) - ...
%     7.5  *gamma  *fc101 *xi01 *xi11    *P(1,6)   *PI(5,4) + ...
%     3  *gamma *xi11 ^2   *P(1, 1)   *PI(5,5) + ...
%     6  *gamma  *xi01  *xi21 *P(1,1)   *PI(5, 5) + ...
%     6  *gamma  *h101 *xi01 *xi11    *P(1,3)   *PI(5,5) + ...
%     6  *gamma  *hc101 *xi01 *xi11    *P(1,4)   *PI(5,5) + ...
%     6  *gamma  *f101  *xi01 *xi11    *P(1,5)   *PI(5,5) + ...
%     6  *gamma  *fc101 *xi01 *xi11    *P(1,6)   *PI(5,5));
% 
% 
% 
% f201 = 1/(2*l1-l3)* (- fd200 + ...
%     15  *gamma  *f200 *xi01 *xi11    *P(1,1)   *PI(1,4) + ...
%     3.75  *gamma  *f101  *xi01   *P(1,1)^2   *PI(1,4) - ...
%     12  *gamma  *f200 *xi01 *xi11    *P(1,1)   *PI(1,5) - ...
%     3  *gamma  *f101  *xi01   *P(1,1)^2   *PI(1,5) + ...
%     7.5  *gamma  *f110 *xi01 *xi11    *P(1,1)   *PI(2,4) + ...
%     3.75  *gamma  *f011 *xi01   *P(1, 1)^2   *PI(2, 4) - ...
%     6  *gamma  *f110 *xi01 *xi11    *P(1, 1)   *PI(2,5) - ...
%     3  *gamma  *f011 *xi01   *P(1,1)^2  *PI(2,5) - ...
%     3.75  *gamma *xi11    *P(1,1)^2   *PI(5,4) - ...
%     7.5  *gamma  *h200  *xi01 *xi11    *P(1,3)   *PI(5,4) - ...
%     7.5  *gamma  *h101 *xi01   *P(1,1)   *P(1, 3)   *PI(5,4) - ...
%     7.5  *gamma  *hc200 *xi01 *xi11    *P(1,4)   *PI(5, 4) - ...
%     7.5  *gamma  *hc101 *xi01 *P(1,1) *P(1,4) *PI(5,4) - ...
%     7.5  *gamma  *f200 *xi01 *xi11    *P(1,5) *PI(5,4) - ...
%     7.5  *gamma  *f101  *xi01   *P(1,1)   *P(1,5)   *PI(5,4) - ...
%     7.5  *gamma  *fc200 *xi01 *xi11    *P(1,6)   *PI(5,4) - ...
%     7.5  *gamma  *fc101 *xi01 *P(1,1) *P(1,6)*PI(5,4) + ...
%     3  *gamma *xi11    *P(1,1)^2   *PI(5,5) + ...
%     6  *gamma  *h200  *xi01 *xi11    *P(1, 3)   *PI(5,5) + ...
%     6  *gamma  *h101 *xi01   *P(1,1)   *P(1,3)  *PI(5,5) + ...
%     6  *gamma  *hc200 *xi01 *xi11    *P(1,4)   *PI(5,5) + ...
%     6  *gamma  *hc101 *xi01   *P(1,1)   *P(1,4)   *PI(5,5) + ...
%     6  *gamma  *f200 *xi01 *xi11    *P(1,5)   *PI(5,5) + ...
%     6  *gamma  *f101  *xi01   *P(1,1)   *P(1,5)   *PI(5,5) +... 
%     6  *gamma  *fc200 *xi01 *xi11    *P(1,6)   *PI(5,5) + ...
%     6  *gamma  *fc101 *xi01   *P(1,1)   *P(1,6)   *PI(5,5));
% 
% 
% 
% f021 = 1/(2*l1c - l3)*(- fd020  + ...
%     7.5  *gamma  *f110 *xi01 *xi11    *P(1,2)   *PI(1,4) + ...
%     3.75  *gamma  *f101  *xi01   *P(1,2)^2   *PI(1,4) - ...
%     6  *gamma  *f110 *xi01 *xi11    *P(1,2)   *PI(1, 5) - ...
%     3  *gamma  *f101  *xi01   *P(1,2)^2   *PI(1, 5) + ...
%     15  *gamma  *f020 *xi01 *xi11    *P(1,2)   *PI(2,4) + ...
%     3.75  *gamma  *f011 *xi01   *P(1,2)^2   *PI(2,4) - ...
%     12  *gamma  *f020 *xi01 *xi11    *P(1,2)   *PI(2,5) - ...
%     3  *gamma  *f011 *xi01   *P(1,2)^2   *PI(2,5) - ...
%     3.75  *gamma *xi11    *P(1,2)^2   *PI(5,4) - ...
%     7.5  *gamma  *h020  *xi01 *xi11    *P(1,3)   *PI(5,4) - ...
%     7.5  *gamma  *h011 *xi01   *P(1,2)   *P(1,3)   *PI(5,4) - ...
%     7.5  *gamma  *hc020  *xi01 *xi11 *P(1,4)*PI(5,4) - ...
%     7.5  *gamma  *hc011 *xi01   *P(1,2)   *P(1,4) *PI(5,4) - ...
%     7.5  *gamma  *f020 *xi01 *xi11    *P(1,5)   *PI(5,4) - ...
%     7.5  *gamma  *f011 *xi01   *P(1, 2)   *P(1,5)   *PI(5,4) - ...
%     7.5  *gamma  *fc020  *xi01 *xi11    *P(1,6)   *PI(5, 4) - ...
%     7.5  *gamma  *fc011 *xi01   *P(1, 2)   *P(1, 6)   *PI(5, 4) + ...
%     3  *gamma *xi11    *P(1,2)^2   *PI(5,5) + ...
%     6  *gamma  *h020  *xi01 *xi11    *P(1,3)   *PI(5,5) + ...
%     6  *gamma  *h011 *xi01   *P(1,2)   *P(1,3)   *PI(5, 5) + ...
%     6  *gamma  *hc020  *xi01 *xi11    *P(1,4)   *PI(5,5) + ...
%     6  *gamma  *hc011 *xi01   *P(1,2)   *P(1,4)   *PI(5,5) + ...
%     6  *gamma  *f020 *xi01 *xi11    *P(1,5)   *PI(5, 5) + ...
%     6  *gamma  *f011 *xi01   *P(1,2)   *P(1,5)   *PI(5,5) + ...
%     6  *gamma  *fc020  *xi01 *xi11    *P(1,6)   *PI(5,5) + ...
%     6  *gamma  *fc011 *xi01   *P(1,2)   *P(1,6)   *PI(5,5));
% 
% 
% f111 = 1/(l1+l1c-l3)* (- fd110 + ...
%     7.5  *gamma  *f110 *xi01 *xi11    *P(1,1)   *PI(1,4) + ...
%     15  *gamma  *f200 *xi01 *xi11    *P(1, 2)   *PI(1, 4) + ...
%     7.5  *gamma  *f101  *xi01   *P(1,1)   *P(1,2)   *PI(1,4) -... 
%     6  *gamma  *f110 *xi01 *xi11    *P(1,1)   *PI(1,5) - ...
%     12  *gamma  *f200 *xi01 *xi11    *P(1, 2)   *PI(1,5) - ...
%     6  *gamma  *f101  *xi01   *P(1, 1)   *P(1, 2)   *PI(1, 5) +... 
%     15  *gamma  *f020 *xi01 *xi11    *P(1, 1)   *PI(2, 4) + ...
%     7.5  *gamma  *f110 *xi01 *xi11    *P(1, 2)   *PI(2, 4) + ...
%     7.5  *gamma  *f011 *xi01   *P(1, 1)   *P(1, 2)   *PI(2, 4) -... 
%     12  *gamma  *f020 *xi01 *xi11    *P(1, 1)   *PI(2, 5) - ...
%     6  *gamma  *f110 *xi01 *xi11    *P(1, 2)   *PI(2, 5) - ...
%     6  *gamma  *f011 *xi01   *P(1, 1)   *P(1, 2)   *PI(2, 5) -... 
%     7.5  *gamma *xi11    *P(1, 1)   *P(1, 2)   *PI(5,4) - ...
%     7.5  *gamma  *h110 *xi01 *xi11    *P(1,3)   *PI(5,4) - ...
%     7.5  *gamma  *h011 *xi01   *P(1,1)   *P(1,3)   *PI(5, 4) - ...
%     7.5  *gamma  *h101 *xi01   *P(1,2)   *P(1, 3)   *PI(5, 4) - ...
%     7.5  *gamma  *hc110  *xi01 *xi11    *P(1, 4)   *PI(5, 4) - ...
%     7.5  *gamma  *hc011 *xi01   *P(1, 1)   *P(1, 4)   *PI(5, 4) - ...
%     7.5  *gamma  *hc101 *xi01   *P(1, 2)   *P(1, 4)   *PI(5, 4) - ...
%     7.5  *gamma  *f110 *xi01 *xi11    *P(1, 5)   *PI(5, 4) - ...
%     7.5  *gamma  *f011 *xi01   *P(1, 1)   *P(1, 5)   *PI(5, 4) - ...
%     7.5  *gamma  *f101  *xi01   *P(1, 2)   *P(1, 5)   *PI(5, 4) - ...
%     7.5  *gamma  *fc110   *xi01 *xi11    *P(1, 6)   *PI(5, 4) - ...
%     7.5  *gamma  *fc011 *xi01   *P(1, 1)   *P(1, 6)   *PI(5, 4) - ...
%     7.5  *gamma  *fc101 *xi01   *P(1, 2)   *P(1,6)   *PI(5, 4) + ...
%     6  *gamma *xi11    *P(1, 1)   *P(1, 2)   *PI(5, 5) + ...
%     6  *gamma  *h110 *xi01 *xi11    *P(1, 3)   *PI(5, 5) + ...
%     6  *gamma  *h011 *xi01   *P(1, 1)   *P(1, 3)   *PI(5, 5) + ...
%     6  *gamma  *h101 *xi01   *P(1, 2)   *P(1, 3)   *PI(5,5) + ...
%     6  *gamma  *hc110  *xi01 *xi11    *P(1,4)   *PI(5,5) + ...
%     6  *gamma  *hc011 *xi01   *P(1,1)   *P(1, 4)   *PI(5, 5) + ...
%     6  *gamma  *hc101 *xi01   *P(1, 2)   *P(1, 4)   *PI(5, 5) +... 
%     6  *gamma  *f110 *xi01 *xi11    *P(1, 5)   *PI(5, 5) + ...
%     6  *gamma  *f011 *xi01   *P(1,1)   *P(1, 5)   *PI(5, 5) + ...
%     6  *gamma  *f101  *xi01   *P(1, 2)   *P(1, 5)   *PI(5, 5) + ...
%     6  *gamma  *fc110   *xi01 *xi11    *P(1, 6)   *PI(5, 5) + ...
%     6  *gamma *fc011*xi01*P(1,1)*P(1,6)*PI(5,5) + ...
%     6*gamma*fc101*xi01*P(1,2)*P(1,6)*PI(5,5));
% 


vecC = [h012;h102;h201;h021;h111;f012;f102;f201;f021;f111];

Coeff_Iterate_2 = [Coeff_Iterate_2,vecC];

end  

SSM_Coeff_A_2 = griddedInterpolant(tkr3(:),Coeff_Iterate_2.','spline');
save('Adiabatic_SSM_coeff.mat','SSM_Coeff_A_1','SSM_Coeff_A_2')

%%
load('Adiabatic_SSM_coeff.mat','SSM_Coeff_A_1','SSM_Coeff_A_2')
load('Solution.mat','XI_0','XI_1','XI_2','XI_3');
epsilon = 0.01;
ctspan = linspace(0,6,10000)/epsilon;%100000
ROM=@(t,z) rom_temp_model_adiabatic(t,z,SSM_Coeff_A_2,SSM_Coeff_A_1,xi_01,xi_11,xi_21,Valpha,ValphaD,V,A,Force_Lorenz,Dalpha,gamma,epsilon);
q0 = 0.6*exp(1i*0);
[y0,model0,Net_Sol0] = compute_SSM_phy(XI_0,XI_1,XI_2,XI_3,ctspan(1),gamma,q0,epsilon,SSM_Coeff_A_2,SSM_Coeff_A_1,Valpha,V,A,Force_Lorenz,Dalpha);

IC = [real(q0);imag(q0)];

tic 
[t_sol,ROM_sol] = ode45(ROM,ctspan,IC);
toc

[y,modal,Net_Sol] = compute_SSM_phy(XI_0,XI_1,XI_2,XI_3,t_sol,gamma,(ROM_sol(:,1)+1i*ROM_sol(:,2)).',epsilon,SSM_Coeff_A_2,SSM_Coeff_A_1,Valpha,V,A,Force_Lorenz,Dalpha);


FullS = @(t,y) full_system(t,y,epsilon,Force_Lorenz);
tic
IC =y0;
[tSP,SP_Traj] = ode45(FullS,ctspan,IC);
toc
% % save('OrderOmega0.1.mat','SP_Traj','y','Net_Sol','tSP');
% 
figure 
hold on 
indexR = 1;
plot(tSP,SP_Traj(:,indexR),'-','LineWidth',3,'color','black')
hold on 
plot(tSP,y(indexR,:),'--','LineWidth',3,'color','red')
hold on 
plot(tSP,Net_Sol(indexR,:),'-','LineWidth',3,'color',[0 0 1 0.3])
hold on 
xlabel('$t \,[$s$]$','Interpreter','latex');
ylabel('$q_2 \,[$m$]$','Interpreter','latex');



% dias = [];
% for ind = 1:1000
%     H = VT{1,ind};
%     dias = [dias,H(:,6)];
% end    
% figure 
% plot(Grid_F,real(dias(4,:)),'-','LineWidth',3)
% 
% 
% dias = [];
% for ind = 1:1000
%     H = DT{1,ind};
%     dias = [dias,H(:)];
% end    
% figure 
% plot(Grid_F,real(dias(1,:)),'-','LineWidth',3)
% 
% 
% epsilon = 0.01;
%  ctspan = linspace(6,20,9000)/epsilon;
% dias = [];
% epsilon = 0.001;
% for indf = 1:max(size(ctspan))
%     VF = Valpha(Force_Lorenz(ctspan(indf)*epsilon),V);
%     dias = [dias,VF(:,4)];
% end    
% figure 
% plot(ctspan*epsilon,real(dias(4,:)),'-','LineWidth',3)
% xlabel('$\alpha = \epsilon t$')
% ylabel('Re[P(1,6)]')


%

% epsilon = 0.001;
%  ctspan = linspace(6,20,90000)/epsilon;
% dias = [];
% epsilon = 0.001;
% for indf = 1:max(size(ctspan))
%     VF = Dalpha(Force_Lorenz(ctspan(indf)*epsilon));
%     dias = [dias,VF.'];
% end    
% figure 
% plot(ctspan*epsilon,real(dias(1,:)),'-','LineWidth',3)
% xlabel('$\alpha = \epsilon t$')
% ylabel('Re[$\lambda_1$]')
%%

% Estimate_ball_cube1 = (alpha*delta/2 - gamma*delta.^3)./(epsilon*max(abs(F_a_new)));
% epsilon = 10^-5;
% Estimate_ball_cube2 = (alpha*delta/2 - gamma*delta.^3)./(epsilon*max(abs(F_a_new)));
% epsilon = 10^-4;
% Estimate_ball_cube3 = (alpha*delta/2 - gamma*delta.^3)./(epsilon*max(abs(F_a_new)));
% epsilon = 10^-3;
% Estimate_ball_cube4 = (alpha*delta/2 - gamma*delta.^3)./(epsilon*max(abs(F_a_new)));
% epsilon = 10^-2;
% Estimate_ball_cube5 = (alpha*delta/2 - gamma*delta.^3)./(epsilon*max(abs(F_a_new)));
% 
% Estimate_ball_quad = (alpha*delta/2 - gamma*delta.^3-gamma_tilde*delta.^2)./(epsilon*max(abs(F_a_new)));
% 
% epsilon = 10^-6;
% Estimate_ball_quad1 = (alpha*delta/2 - gamma*delta.^3-gamma_tilde*delta.^2)./(epsilon*max(abs(F_a_new)));
% epsilon = 10^-5;
% Estimate_ball_quad2 = (alpha*delta/2 - gamma*delta.^3-gamma_tilde*delta.^2)./(epsilon*max(abs(F_a_new)));
% epsilon = 10^-4;
% Estimate_ball_quad3 = (alpha*delta/2 - gamma*delta.^3-gamma_tilde*delta.^2)./(epsilon*max(abs(F_a_new)));
% epsilon = 10^-3;
% Estimate_ball_quad4 = (alpha*delta/2 - gamma*delta.^3-gamma_tilde*delta.^2)./(epsilon*max(abs(F_a_new)));
% epsilon = 10^-2;
% Estimate_ball_quad5 = (alpha*delta/2 - gamma*delta.^3-gamma_tilde*delta.^2)./(epsilon*max(abs(F_a_new)));
% 
% 
% figure 
% 
% plot(delta,ones(1,max(size(delta))),'-','LineWidth',3,'color','red');
% hold on 
% plot(delta,Estimate_ball_quad5,'-','LineWidth',1);
% hold on 
% plot(delta,Estimate_ball_quad4,'-','LineWidth',1);
% hold on 
% plot(delta,Estimate_ball_quad3,'-','LineWidth',1);
% hold on 
% plot(delta,Estimate_ball_quad2,'-','LineWidth',1);
% hold on 
% plot(delta,Estimate_ball_quad1,'-','LineWidth',1);
% 
% axis([0,1,-0.5,2])

% epsilon = 10^-2;
% hold on 
% plot(delta,Estimate_ball_quad,'-','LineWidth',3,'color','blue');


% order epsilon solution
% AP = [0,0,1,0;0,0,0,1;-2*k,k,-c,c;k,-2*k,c,-2*c];



% xs=@(t,ta) real(V*([exp(D(1)*(t-ta));conj(exp(D(1)*(t-ta)));exp(D(3)*(t-ta));conj(exp(D(3)*(t-ta)));exp(D(5)*(t-ta));conj(exp(D(5)*(t-ta)))].*(VI*[0*ones(1,max(size(ta)));0*ones(1,max(size(ta)));0*ones(1,max(size(ta)));0*ones(1,max(size(ta)));0*ones(1,max(size(ta)));Force_Lorenz(ta)])));
% positive_Lvec = find(tspan<-3999 & tspan>-4000);
% positive_L = positive_Lvec(1)-1;
% 
% 
% tcalc = tspan(positive_L:end);
% N_Max = max(size(tcalc));
% LT = [];
% start_time = [1];
% xi_sol = cell(1,max(size(start_time)));
% 
% tic
% sol_1 = [];
% for i = 1:max(size(tcalc))
% Lo = positive_L - 1 + i ;
% T = tspan(start_time(1):Lo);
% ti = tcalc(i);
% 
% INx = xs(ti,T);
% 
% Q1x = trapz(T,INx,2);
% sol_1  =[sol_1,Q1x];
% end    
% xi_sol{1,1} = sol_1;
% LT = [LT,tspan(start_time(1))];
% toc
%  start_time=positive_L;
% xi_solg=sol_1.'; 
% xi_full = griddedInterpolant(tcalc(:),xi_solg,'spline');
% xi_full_eval = @(xa) xi_full(xa);
% save('Solution_1.mat','xi_full_eval')
% 
% xi_sol0=xi_sol{1,1};
% xi_sol1 = griddedInterpolant(tcalc(:),(xi_sol0(1,:)).','spline');
% xi_sol2 = @(xq) interp1(tcalc(:),(xi_sol0(2,:)).',xq,'spline');
% xi_sol3 = @(xq) interp1(tcalc(:),(xi_sol0(3,:)).',xq,'spline');
% xi_sol4 = @(xq) interp1(tcalc(:),(xi_sol0(4,:)).',xq,'spline');
% xi_net_sol = @(t) [xi_sol1(t);xi_sol2(t);xi_sol3(t);xi_sol4(t)];
% save('Xi_Sol1.mat','xi_sol1')
% 
% 
% xs=@(t,ta) real(V*([exp(D(1)*(t-ta));conj(exp(D(1)*(t-ta)));exp(D(3)*(t-ta));conj(exp(D(3)*(t-ta)));exp(D(5)*(t-ta));conj(exp(D(5)*(t-ta)))].*(VI*[0*ones(1,max(size(ta)));0*ones(1,max(size(ta)));0*ones(1,max(size(ta)));-(m1+Mf)/(m1*Mf)*gamma*xi_sol1(ta).^3;1/m1*gamma*xi_sol1(ta).^3;0*ones(1,max(size(ta)))])));
% positive_Lvec = find(tspan<-2999 & tspan>-3000);
% positive_L = positive_Lvec(1)-1;
% % 
% tcalc = tspan(positive_L:end);
% N_Max = max(size(tcalc));
% LT = [];
% 
% xi_sol = cell(1,max(size(start_time)));
% 
% tic
% sol_1 = [];
% for i = 1:max(size(tcalc))
% Lo = positive_L - 1 + i ;
% T = tspan(start_time:Lo);
% ti = tcalc(i);
% 
% INx = xs(ti,T);
% 
% Q1x = trapz(T,INx,2);
% sol_1  =[sol_1,Q1x];
% end    
% xi_sol{1,1} = sol_1;
% LT = [LT,tspan(start_time(1))];
% toc
% 
% xi_solg=sol_1.'; 
% xi_full = griddedInterpolant(tcalc(:),xi_solg,'spline');
% xi_full_eval3 = @(xa) xi_full(xa);
% save('Solution_3.mat','xi_full_eval3')

%% Calculate time dependent coefficients
% load('Xi_Sol1.mat','xi_sol1')
% load('Solution_3.mat','xi_full_eval3')
% load('Solution_1.mat','xi_full_eval')
% l1 = D(1);
% l1c = conj(D(1));
% l2 = D(3);
% l2c = conj(D(3));
% l3 = D(5);
% l3c = conj(D(5));
% h030 = -(0.013813008195636451 + 0.000996033944032752*1i)*gamma/(l2 - 3*l1c);
% h120 = -(0.04050205667290954 + 0.009257694990541146*1i)*gamma/(l2 - l1-2*l1c);
% h210 = -(0.038622163372940145 + 0.015311760436585583*1i)*gamma/(l2 - 2*l1 - l1c);
% h300 = -(0.011947703447961826 + 0.007003117973441996*1i)*gamma/(l2 - 3*l1);
% 
% f030 = -(0.014143339101206014 - 0.004483904619644111*1i)*gamma/(l3 - 3*l1c);
% f120 = -(0.04398260498843236 - 0.0068399877601822145*1i)*gamma/(l3 - l1-2*l1c);
% f210 = -(0.04451123689935621 - 0.00006902041225595448*1i)*gamma/(l3 - 2*l1 - l1c);
% f300 = -(0.01466786866532256 + 0.0022345179315944852*1i)*gamma/(l3 - 3*l1);
% 
% 
% % load('Excellent_Order_Anchor_solution.mat')
% % xi3_sol1_dummy = @(ta) XI_hyperbolic_solution{1,3}(ta);
% % getc = @(data, cNum) data(:, cNum).';
% % xi3_sol1 = @(xa) getc(xi3_sol1_dummy(xa),1);
% % 
% % ls = D(1);
% % lf = D(3);
% % ap = V(1,1);
% % bp = V(1,3);
% % L1 = VI(1,3);
% % L3 = VI(3,3);
% % L_0 = -4000;
% % tspan_0 = linspace(L_0,300,N_Max);
% % positive_Lvec = find(tspan_0<-2999 & tspan_0>-3000);
% % positive_L = positive_Lvec(1)-1;
% 
% 
% h_coeff=@(t,ta) [-1.*exp((l2-2*l1c)*(t-ta)).*(0.14165458000082587 + 0.021169762212267226*1i).*gamma.*xi_sol1(ta);-1.*exp((l2-2*l1)*(t-ta)).*(0.12873087480450443 + 0.06278965471637281*1i).*gamma.*xi_sol1(ta);-1.*exp((l2-l1-l1c)*(t-ta)).*(0.27356993552351216 + 0.08494825393731548*1i).*gamma.*xi_sol1(ta);-1.*exp((l2-l1c)*(t-ta)).*(0.48134875190217397 + 0.11002354683308162*1i).*gamma.*xi_sol1(ta).^2;-1.*exp((l2-l1)*(t-ta)).*(0.4590070643933819 + 0.1819733954524166*1i).*gamma.*xi_sol1(ta).^2
% ];
% 
% 
% % h021 -1.*exp((l2-2*l1c)*(t-ta)).*(0.14165458000082587 + 0.021169762212267226*1i).*gamma.*xi_sol1(ta)
% % h201 -1.*exp((l2-2*l1)*(t-ta)).*(0.12873087480450443 + 0.06278965471637281*1i).*gamma.*xi_sol1(ta)
% % h111 -1.*exp((l2-l1-l1c)*(t-ta)).*(0.27356993552351216 + 0.08494825393731548*1i).*gamma.*xi_sol1(ta)
% % 
% % h012 -1.*exp((l2-l1c)*(t-ta)).*(0.48134875190217397 + 0.11002354683308162*1i).*gamma.*xi_sol1(ta).^2
% % h102 -1.*exp((l2-l1)*(t-ta)).*(0.4590070643933819 + 0.1819733954524166*1i).*gamma.*xi_sol1(ta).^2
% 
% f_coeff=@(t,ta) [-1.*exp((l3-2*l1c)*(t-ta)).*(0.1493846984852132 - 0.03507901563128705*1i).*gamma.*xi_sol1(ta);-1.*exp((l3-2*l1)*(t-ta)).*(0.1530188850500885 + 0.011469363417641935*1i).*gamma.*xi_sol1(ta);-1.*exp((l3-l1-l1c)*(t-ta)).*(0.3059651596621337 - 0.023887716291801475*1i).*gamma.*xi_sol1(ta);-1.*exp((l3-l1c)*(t-ta)).*(0.5227135053304293 - 0.08129018232281629*1i).*gamma.*xi_sol1(ta).^2;-1.*exp((l3-l1)*(t-ta)).*(0.5289960581546924 - 0.0008202765988769862*1i).*gamma.*xi_sol1(ta).^2];
% 
% % f021 -1.*exp((l3-2*l1c)*(t-ta)).*(0.1493846984852132 - 0.03507901563128705*1i).*gamma.*xi_sol1(ta)
% % f201 -1.*exp((l3-2*l1)*(t-ta)).*(0.1530188850500885 + 0.011469363417641935*1i).*gamma.*xi_sol1(ta)
% % f111 -1.*exp((l3-l1-l1c)*(t-ta)).*(0.3059651596621337 - 0.023887716291801475*1i).*gamma.*xi_sol1(ta)
% % 
% % f012 -1.*exp((l3-l1c)*(t-ta)).*(0.5227135053304293 - 0.08129018232281629*1i).*gamma.*xi_sol1(ta).^2
% % f102 -1.*exp((l3-l1)*(t-ta)).*(0.5289960581546924 - 0.0008202765988769862*1i).*gamma.*xi_sol1(ta).^2
% 
% 
% % tcalc = tspan_0(positive_L:end);
% N_Max = max(size(tcalc));
% sol_1rH = [];
% sol_1iH = [];
% 
% sol_1rF = [];
% sol_1iF = [];
% 
% tic
% for i = 1:max(size(tcalc))
% Lo = positive_L - 1 + i ;
% T = tspan(start_time(1):Lo);
% ti = tcalc(i);
% 
% INxH = h_coeff(ti,T);
% INxrH = real(INxH);
% INxiH = imag(INxH);
% Q1xrH = trapz(T,INxrH,2);
% Q1xiH = trapz(T,INxiH,2);
% sol_1rH  =[sol_1rH,Q1xrH];
% sol_1iH  =[sol_1iH,Q1xiH];
% 
% INxF = f_coeff(ti,T);
% INxrF = real(INxF);
% INxiF = imag(INxH);
% Q1xrF = trapz(T,INxrF,2);
% Q1xiF = trapz(T,INxiF,2);
% sol_1rF  =[sol_1rF,Q1xrF];
% sol_1iF  =[sol_1iF,Q1xiF];
% 
% end    
% toc
% 
% h021r = griddedInterpolant(tcalc(:),(sol_1rH(1,:)).','spline');
% h021i = griddedInterpolant(tcalc(:),(sol_1iH(1,:)).','spline');
% h021 = @(xa) h021r(xa) + 1i*h021i(xa);
% 
% f021r = griddedInterpolant(tcalc(:),(sol_1rF(1,:)).','spline');
% f021i = griddedInterpolant(tcalc(:),(sol_1iF(1,:)).','spline');
% f021 = @(xa) f021r(xa) + 1i*f021i(xa);
% 
% 
% h201r = griddedInterpolant(tcalc(:),(sol_1rH(2,:)).','spline');
% h201i = griddedInterpolant(tcalc(:),(sol_1iH(2,:)).','spline');
% h201 = @(xa) h201r(xa) + 1i*h201i(xa);
% 
% f201r = griddedInterpolant(tcalc(:),(sol_1rF(2,:)).','spline');
% f201i = griddedInterpolant(tcalc(:),(sol_1iF(2,:)).','spline');
% f201 = @(xa) f201r(xa) + 1i*f201i(xa);
% 
% h111r = griddedInterpolant(tcalc(:),(sol_1rH(3,:)).','spline');
% h111i = griddedInterpolant(tcalc(:),(sol_1iH(3,:)).','spline');
% h111 = @(xa) h111r(xa) + 1i*h111i(xa);
% 
% f111r = griddedInterpolant(tcalc(:),(sol_1rF(3,:)).','spline');
% f111i = griddedInterpolant(tcalc(:),(sol_1iF(3,:)).','spline');
% f111 = @(xa) f111r(xa) + 1i*f111i(xa);
% 
% h012r = griddedInterpolant(tcalc(:),(sol_1rH(4,:)).','spline');
% h012i = griddedInterpolant(tcalc(:),(sol_1iH(4,:)).','spline');
% h012 = @(xa) h012r(xa) + 1i*h012i(xa);
% 
% f012r = griddedInterpolant(tcalc(:),(sol_1rF(4,:)).','spline');
% f012i = griddedInterpolant(tcalc(:),(sol_1iF(4,:)).','spline');
% f012 = @(xa) f012r(xa) + 1i*f012i(xa);
% 
% h102r = griddedInterpolant(tcalc(:),(sol_1rH(5,:)).','spline');
% h102i = griddedInterpolant(tcalc(:),(sol_1iH(5,:)).','spline');
% h102 = @(xa) h102r(xa) + 1i*h102i(xa);
% 
% f102r = griddedInterpolant(tcalc(:),(sol_1rF(5,:)).','spline');
% f102i = griddedInterpolant(tcalc(:),(sol_1iF(5,:)).','spline');
% f102 = @(xa) f102r(xa) + 1i*f102i(xa);
% save('Coeff_SSM_NF_Exactv1.mat','h030','h300','h210','h120','h111','h021','h201','h102','h012');
% save('Coeff_SSM_NF_Exactv3.mat','f030','f300','f210','f120','f111','f021','f201','f102','f012');
%%
% load('Coeff_SSM_NF_Exactv1.mat','h030','h300','h210','h120','h111','h021','h201','h102','h012');
% load('Coeff_SSM_NF_Exactv3.mat','f030','f300','f210','f120','f111','f021','f201','f102','f012');
% 
% % Epsilon = [0.1,0.01,0.001,0.0001];
% % NMTET = [];
% % for i = 1:max(size(Epsilon))
% epsilon = 0.01;    
% Order = 3;
% 
% ROM_ODE_ns =@(t,zk) rom_temp_model_noscale(t,zk,l1,gamma,epsilon,xi_sol1);
% ctspan = linspace(0,300,5000);
% 
% q0 = 0.2*exp(1i*0.3);
% y0 =compute_SSM_phy(xi_full_eval3,xi_full_eval,0,l1,l1,gamma,V,inv(V),q0,h030,h300,h210,h120,h111,h021,h201,h102,h012,f030,f300,f210,f120,f111,f021,f201,f102,f012,epsilon);
% 
% IC = [real(q0);imag(q0)];
% 
% tic 
% [t_sol,ROM_sol] = ode45(ROM_ODE_ns,ctspan,IC);
% toc
% 
% lf = 0;
% [y,modal] = compute_SSM_phy(xi_full_eval3,xi_full_eval,t_sol.',lf,ls,gamma,V,inv(V),(ROM_sol(:,1)+1i*ROM_sol(:,2)).',h030,h300,h210,h120,h111,h021,h201,h102,h012,f030,f300,f210,f120,f111,f021,f201,f102,f012,epsilon);
% 
% 
% 
% 
% SolutionA = epsilon*xi_full_eval(ctspan.') + epsilon^3*xi_full_eval3(ctspan.');
% FullS = @(t,y) full_system(t,y,epsilon,Force_Lorenz);
% 
% tic
% IC = y0;
% [tSP,SP_Traj] = ode45(FullS,ctspan,IC);
% toc
% y = y.';
% figure 
% indexR = 4;
% plot(ctspan,y(:,indexR),'-','LineWidth',3,'color','black')
% hold on 
% plot(ctspan,SP_Traj(:,indexR),'--','LineWidth',3,'color','red')
% hold on 
% plot(ctspan,SolutionA(:,indexR),'--','LineWidth',3,'color',[0 1 0 0.3])
% Rel_Errorz = (sqrt(sum((y - SP_Traj).^2,2)))/(sqrt(max(sum((SP_Traj).^2,2))));
% NMTE = sum(sqrt(sum((y - SP_Traj).^2,2)))/(sqrt(max(sum((SP_Traj).^2,2)))*max(size(ctspan)));


% NMTET = [NMTET,NMTE];
% end

% figure
% plot(Epsilon,NMTET,'-o','LineWidth',3,'MarkerSize',30,'color','blue')

% figure
% plot(ctspan,Rel_Errorx,'-','LineWidth',3,'color',[0.7 0.7 0.7])
% hold on 
% plot(ctspan,Rel_Error,'-','LineWidth',3,'color',[0 0 0])
% hold on 
% plot(ctspan,Rel_Errorz,'-','LineWidth',3,'color',[0 0.5 0])

% FullS = @(t,y) full_system(t,y,epsilon,Force_Lorenz);
% 
% tic
% IC = [0;0;0;0;0;0];
% [tSP,SP_Traj] = ode45(FullS,tcheck,IC);
% toc


